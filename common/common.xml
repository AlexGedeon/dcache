<!-- $Id: common.xml,v 1.33 2007-10-24 10:05:13 tigran Exp $ -->

<project xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!-- Define task for invoking SMC - the state machine compiler -->
    <taskdef name="smc" classname="net.sf.smc.ant.SmcJarWrapper" classpath="${libDir}/smc/smc-ant.jar" />
    <property name="smc.jar" location="${libDir}/smc/Smc.jar" />

    <path id="maven-ant-tasks.classpath" path="${antlib.dir}/maven-ant/maven-ant-tasks-2.1.1.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />
    <!--
        Useful information from Environment
    -->

    <property environment="sysenv" />

    <!-- JAVAC related constants -->
    <!-- modify values in property file ant not here -->
    <property file="${buildTop}/common/javac.properties" />

    <!--
        initialize some defaults
    -->

    <tstamp>
        <format property="jar.timestamp" pattern="MM/dd/yyyy hh:mm:ss" />
        <format property="rpm.timestamp" pattern="yyyy.MM.dd" />
        <format property="sortableTimestamp" timezone="UTC" pattern="yyyyMMddHHmmss" />
    </tstamp>

    <property name="m2.home" value="${user.home}/.m2/repository" />
    <!-- external dependencies -->
    <artifact:dependencies pathId="dependency.classpath" filesetId="dependency.fileset" useScope="runtime">
        <!-- Remote repositories -->
        <remoteRepository id="dcacheorg.repository"
                          url="https://download.dcache.org/nexus/content/groups/public" />
        <localRepository id="local" path="${m2.home}" />

        <!-- Suppress some dependencies: Dependencies with scope
             'provided' are not included in the runtime classpath. We
             use this to suppress jars we don't really need or get
             through other means.
        -->
        <dependency groupId="commons-logging" artifactId="commons-logging" version="1.1.1" scope="provided"/>
        <dependency groupId="org.springframework" artifactId="spring" version="2.5.6" scope="provided"/>
        <dependency groupId="org.springframework" artifactId="spring-webmvc" version="2.5.6" scope="provided"/>
        <dependency groupId="org.slf4j" artifactId="slf4j-log4j12" version="1.5.6" scope="provided"/>
        <dependency groupId="log4j" artifactId="log4j" version="1.2.14" scope="provided"/>

        <!-- external dependencies -->
        <dependency groupId="com.sun.grizzly" artifactId="grizzly-framework" version="1.9.19"/>
        <dependency groupId="com.sun.messaging.mq" artifactId="jms" version="4.4.2"/>
        <dependency groupId="com.sun.messaging.mq" artifactId="imq" version="4.4.2"/>
        <dependency groupId="org.springframework" artifactId="spring-beans" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-context" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-core" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-expression" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-jdbc" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-orm" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-web" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-aspects" version="3.0.5.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-instrument" version="3.0.5.RELEASE"/>
        <dependency groupId="org.aspectj" artifactId="aspectjrt" version="1.6.10"/>
        <dependency groupId="org.aspectj" artifactId="aspectjweaver" version="1.6.10"/>
        <dependency groupId="org.apache.xbean" artifactId="xbean-spring" version="3.7"/>
        <dependency groupId="org.apache.activemq" artifactId="activemq-all" version="5.4.2"/>
        <dependency groupId="org.slf4j" artifactId="slf4j-api" version="1.6.1"/>
        <dependency groupId="org.slf4j" artifactId="jcl-over-slf4j" version="1.6.1"/>
        <dependency groupId="org.slf4j" artifactId="log4j-over-slf4j" version="1.6.1"/>
        <dependency groupId="org.slf4j" artifactId="jul-to-slf4j" version="1.6.1"/>
        <dependency groupId="commons-codec" artifactId="commons-codec" version="1.4"/>
        <dependency groupId="commons-httpclient" artifactId="commons-httpclient" version="3.1"/>
        <dependency groupId="ch.qos.logback" artifactId="logback-classic" version="0.9.28"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-server" version="7.2.2.v20101205"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-deploy" version="7.2.2.v20101205"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-webapp" version="7.2.2.v20101205"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-servlets" version="7.2.2.v20101205"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-plus" version="7.2.2.v20101205"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-security" version="7.2.2.v20101205"/>
        <dependency groupId="javax.servlet" artifactId="servlet-api" version="2.5"/>
        <dependency groupId="com.sleepycat" artifactId="je" version="4.1.21"/>
        <dependency groupId="axis" artifactId="axis" version="1.3" />
        <dependency groupId="org.jboss.netty" artifactId="netty" version="3.2.4.Final"/>
        <dependency groupId="eu.emi" artifactId="trustmanager" version="3.0.3-1" />
        <dependency groupId="eu.emi" artifactId="trustmanager-axis" version="1.0.1-1" />
        <dependency groupId="eu.emi" artifactId="vomsjapi" version="2.0.0-1" />
        <dependency groupId="org.glite" artifactId="glite-authz-pep-common" version="2.0.0-2" />
        <dependency groupId="org.glite" artifactId="glite-authz-pep-java" version="2.0.0-3" />
        <dependency groupId="javax.jdo" artifactId="jdo2-api" version="2.3-ec"/>
        <dependency groupId="org.apache.geronimo.specs" artifactId="geronimo-jpa_2.0_spec" version="1.1"/>
        <dependency groupId="org.datanucleus" artifactId="datanucleus-core" version="2.2.4"/>
        <dependency groupId="org.datanucleus" artifactId="datanucleus-cache" version="2.1.2"/>
        <dependency groupId="org.datanucleus" artifactId="datanucleus-enhancer" version="2.1.3"/>
        <dependency groupId="org.datanucleus" artifactId="datanucleus-jpa" version="2.1.8"/>
        <dependency groupId="org.datanucleus" artifactId="datanucleus-rdbms" version="2.2.4"/>
        <dependency groupId="toplink.essentials" artifactId="toplink-essentials" version="2.1-60f"/>
        <dependency groupId="com.google.guava" artifactId="guava" version="10.0.1"/>
        <dependency groupId="com.caucho" artifactId="hessian" version="4.0.7" />
        <dependency groupId="com.ettrema" artifactId="milton-api" version="1.5.10"/>
        <dependency groupId="com.ettrema" artifactId="milton-servlet" version="1.5.10"/>
        <dependency groupId="postgresql" artifactId="postgresql" version="9.0-801.jdbc4"/>
        <dependency groupId="commons-dbcp" artifactId="commons-dbcp" version="1.4"/>
        <dependency groupId="c3p0" artifactId="c3p0" version="0.9.1.2"/>
        <dependency groupId="org.hsqldb" artifactId="hsqldb" version="2.2.8"/>
        <dependency groupId="org.liquibase" artifactId="liquibase-core" version="2.0.1"/>
        <dependency groupId="org.antlr" artifactId="stringtemplate" version="3.2.1"/>
    </artifact:dependencies>

    <property name="cog.libDir" value="${libDir}/cog" />
    <property name="gplazma.libDir" location="${libDir}/gplazma" />

    <!--
        generate dcache run-time classpath.
    -->
    <target name="-dcache-classpath">
      <echo>Generating runtime classpath...</echo>

      <!-- First, define some patterns. -->

      <!-- dcache.jar is needed independently of other compiled code -->
      <patternset id="pattern.dcache.jars.only-dcache">
        <include name="dcache.jar"/>
      </patternset>

      <!-- all compiled jar files excluding dcache.jar -->
      <patternset id="pattern.dcache.jars.all-compiled-code-except-dcache">
        <include name="dcache-common.jar"/>
        <include name="cells.jar"/>
        <include name="cells-protocols.jar"/>
        <include name="javatunnel.jar"/>
        <include name="srm.jar"/>
      </patternset>

      <!-- find liquibase -->
      <patternset id="pattern.dcache.jars.liquibase">
        <include name="**/liquibase-core-*.jar"/>
      </patternset>

      <!-- all other jar files are external libraries -->
      <patternset id="pattern.dcache.jars.packaged-external">
        <include name="**/*.jar"/>
        <invert>
          <patternset refid="pattern.dcache.jars.all-compiled-code-except-dcache"/>
          <patternset refid="pattern.dcache.jars.only-dcache"/>
        </invert>
      </patternset>


      <!-- Second, make (configurable) paths by finding matching jar files in
           deployed directory and replacing the path up to "classes" path-element
           with the ${dcache.paths.classes} property  -->
      <pathconvert property="dcache.jars.dcache" targetos="unix">
        <map from="${server.bin.dir}/classes" to="$${dcache.paths.classes}" />
        <path>
          <fileset dir="${server.bin.dir}/classes">
            <patternset refid="pattern.dcache.jars.only-dcache"/>
          </fileset>
        </path>
      </pathconvert>

      <pathconvert property="dcache.jars.all-compiled-code-except-dcache" targetos="unix">
        <map from="${server.bin.dir}/classes" to="$${dcache.paths.classes}" />
        <path>
          <fileset dir="${server.bin.dir}/classes">
            <patternset refid="pattern.dcache.jars.all-compiled-code-except-dcache"/>
          </fileset>
        </path>
      </pathconvert>


      <pathconvert property="dcache.jars.liquibase" targetos="unix">
        <map from="${server.bin.dir}/classes" to="$${dcache.paths.classes}" />
        <path>
          <fileset dir="${server.bin.dir}/classes">
            <patternset refid="pattern.dcache.jars.liquibase"/>
          </fileset>
        </path>
      </pathconvert>

      <pathconvert property="dcache.jars.packaged-external" targetos="unix">
        <map from="${server.bin.dir}/classes" to="$${dcache.paths.classes}" />
        <path>
          <fileset dir="${server.bin.dir}/classes">
            <patternset refid="pattern.dcache.jars.packaged-external"/>
          </fileset>
        </path>
      </pathconvert>

      <!-- Finally, generate the classpath.properties file -->
      <property name="classpath.properties" value="${server.bin.dir}/share/defaults/classpath.properties"/>

      <echo file="${classpath.properties}">#  -----------------------------------------------------------------------
#       Location of jar files
#  -----------------------------------------------------------------------
#   dCache startup scripts need to identify where are all the required jar
#   files.  To do this, various properties take default values from this
#   file.
#
#   The defaults in this file are declared relative to the
#   dcache.paths.classes property.  Please see the paths.properties file
#   for this property's default value.
#
#   To include additional jar files, simply define the dcache.java.classpath
#   property, either in dcache.conf or in the layout file.  Its value should
#   be a colon-separated list of (absolute) paths to the required additional
#   jar files.  Most sites will not have to do this.
#
#
#   Location of the dcache.jar file.
dcache.paths.classpath.dcache=${dcache.jars.dcache}
#
#   Location of the liquibase-core-*.jar file.
dcache.paths.liquibase=${dcache.jars.liquibase}
#
#   Location of all dCache code jar files excluding the dcache.jar file.
dcache.path.classpath.compiled-not-dcache=${dcache.jars.all-compiled-code-except-dcache}
#
#   Location of all dCache code
dcache.paths.classpath.all-compiled-code=$${dcache.paths.classpath.dcache}:$${dcache.path.classpath.compiled-not-dcache}
#
#   All external jar files, including any included by the site-admin.
dcache.paths.classpath.all-external=$${dcache.java.classpath}:$${dcache.paths.classpath.packaged-external}
#
#   The classpath used by dCache.
dcache.paths.classpath=$${dcache.paths.classpath.all-compiled-code}:$${dcache.paths.classpath.all-external}
#
#   A list of all external dependencies that are delivered with dCache.
dcache.paths.classpath.packaged-external=${dcache.jars.packaged-external}
</echo>

    </target>

</project>
