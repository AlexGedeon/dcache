<!-- $Id: common.xml,v 1.33 2007-10-24 10:05:13 tigran Exp $ -->

<project xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!-- Define task for invoking SMC - the state machine compiler -->
    <taskdef name="smc" classname="net.sf.smc.ant.SmcJarWrapper" classpath="${libDir}/smc/smc-ant.jar" />
    <property name="smc.jar" location="${libDir}/smc/Smc.jar" />

    <path id="maven-ant-tasks.classpath" path="${antlib.dir}/maven-ant/maven-ant-tasks-2.1.1.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />
    <!--
        Useful information from Environment
    -->

    <property environment="sysenv" />

    <!-- JAVAC related constants -->
    <!-- modify values in property file ant not here -->
    <property file="${buildTop}/common/javac.properties" />

    <!--
        initialize some defaults
    -->

    <tstamp>
        <format property="jar.timestamp" pattern="MM/dd/yyyy hh:mm:ss" />
        <format property="rpm.timestamp" pattern="yyyy.MM.dd" />
        <format property="sortableTimestamp" timezone="UTC" pattern="yyyyMMddHHmmss" />
    </tstamp>

    <!-- external dependencies -->
    <artifact:dependencies pathId="dependency.classpath" filesetId="dependency.fileset" useScope="runtime">
        <!-- Remote repositories -->
        <remoteRepository id="glassfish.repository"
                          url="http://download.java.net/maven/glassfish/" />
        <remoteRepository id="berkeleydb-je.repository"
                          url="http://download.oracle.com/maven/"/>

        <remoteRepository id="dcache.repository"
                          url="http://www.dcache.org/nexus/content/groups/public" />

        <!-- Suppress some dependencies: Dependencies with scope
             'provided' are not included in the runtime classpath. We
             use this to suppress jars we don't really need or get
             through other means.
        -->
        <dependency groupId="commons-logging" artifactId="commons-logging" version="1.1.1" scope="provided"/>

        <!-- external dependencies -->
        <dependency groupId="com.sun.grizzly" artifactId="grizzly-framework" version="1.9.19"/>
        <dependency groupId="org.dcache.chimera" artifactId="grizzly-rpc" version="0.0.2"/>
        <dependency groupId="org.springframework" artifactId="spring-beans" version="3.0.4.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-context" version="3.0.4.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-core" version="3.0.4.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-expression" version="3.0.4.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-jdbc" version="3.0.4.RELEASE"/>
        <dependency groupId="org.springframework" artifactId="spring-web" version="3.0.4.RELEASE"/>
        <dependency groupId="org.apache.xbean" artifactId="xbean-spring" version="3.7"/>
        <dependency groupId="org.apache.activemq" artifactId="activemq-all" version="5.4.0"/>
        <dependency groupId="org.slf4j" artifactId="slf4j-api" version="1.6.1"/>
        <dependency groupId="org.slf4j" artifactId="jcl-over-slf4j" version="1.6.1"/>
        <dependency groupId="org.slf4j" artifactId="log4j-over-slf4j" version="1.6.1"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-server" version="7.1.6.v20100715"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-deploy" version="7.1.6.v20100715"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-webapp" version="7.1.6.v20100715"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-servlets" version="7.1.6.v20100715"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-plus" version="7.1.6.v20100715"/>
        <dependency groupId="org.eclipse.jetty" artifactId="jetty-security" version="7.1.6.v20100715"/>
        <dependency groupId="javax.servlet" artifactId="servlet-api" version="2.5"/>
        <dependency groupId="com.sleepycat" artifactId="je" version="4.0.103"/>
    </artifact:dependencies>
    <!--
        Untar axis, glite, cog, glue
    -->

    <property name="axis.libDir" location="${libDir}/axis" />
    <property name="axis.tarName" location="${axis.libDir}/axis-bin-1_3.tar.gz" />
    <!-- A pattern uniquely identifying one tar file -->
    <property name="axis.untared" location="${unpackTop}/axis-1_3" />
    <!-- This is the dir the tar will create -->

    <target name="-check.lib.axis.uptodate" >
        <uptodate property="lib.axis.uptodate" targetfile="${axis.untared}">
            <srcfiles dir="${axis.libDir}" includes="${axis.tarName}" />
        </uptodate>
    </target>

    <target name="-lib.axis.untar" depends="-check.lib.axis.uptodate" unless="lib.axis.uptodate">
        <echo>Unpacking to ${axis.untared}</echo>
        <untar src="${axis.tarName}" dest="${unpackTop}" compression="gzip" />
    </target>

    <property name="glite.libDir" location="${libDir}/glite" />
    <property name="glite.untarred" location="${unpackTop}/share" />

    <target name="-check.lib.glite.uptodate" >
        <uptodate property="lib.glite.uptodate" targetfile="${glite.untarred}">
            <srcfiles dir="${glite.libDir}" includes="**/*.tar.gz" />
        </uptodate>
    </target>

    <target name="-lib.glite.untar" depends="-check.lib.glite.uptodate" unless="lib.glite.uptodate">
        <echo>Unpacking to ${glite.untarred}</echo>
        <untar dest="${unpackTop}" compression="gzip">
            <patternset>
                <include name="**/glite*.jar" />
		<include name="**/voms*.jar" />
            </patternset>
            <fileset dir="${glite.libDir}">
                <include name="**/*.tar.gz" />
            </fileset>
        </untar>
    </target>

    <property name="cog.libDir" value="${libDir}/cog" />

    <property name="gplazma.libDir" location="${libDir}/gplazma" />
    <property name="gplazma.tarName" location="${gplazma.libDir}/gplazma.tgz" />
    <!-- A pattern uniquely identifying one tar file -->
    <property name="gplazma.untaredTo" location="${gplazma.libDir}/gplazma" />
    <!-- This is the dir the tar will create -->


    <property name="glue.libDir" location="${libDir}/glue" />
    <property name="glue.tarName" location="${glue.libDir}/glue-srmlib.tgz" />
    <!-- A pattern uniquely identifying one tar file -->
    <property name="glue.untared" location="${unpackTop}/glue-srmlib" />
    <!-- This is the dir the tar will create -->

    <target name="-check.lib.glue.uptodate" >
        <uptodate property="lib.glue.uptodate" targetfile="${glue.untared}">
            <srcfiles dir="${glue.libDir}" includes="${glue.tarName}" />
        </uptodate>
    </target>

    <!--
        generate dcache run-time classpath.
    -->
    <target name="-dcache-classpath">
        <path id="dcache.jars">
            <fileset dir="${server.bin.dir}/classes" includes="**/*.jar"/>
        </path>

        <!--
            replace absolute path with path property
        -->
        <pathconvert property="dcache.classpath" targetos="unix" refid="dcache.jars">
            <map from="${server.bin.dir}/classes" to="${dcache.paths.classes}" />
        </pathconvert>
        <echo>Generating runtime classpath...</echo>
        <echo file="${server.bin.dir}/share/defaults/classpath.properties" append="no">dcache.paths.classpath=$${dcache.java.classpath}:${dcache.classpath}</echo>
    </target>

    <!--
        Generate eclipse project files
    -->
    <target name="eclipse-classpath" description="creates an eclipse .classpath file">
        <pathconvert property="eclipse.entries" refid="dependency.classpath"
 pathsep="&quot;/&gt;&#10;    &lt;classpathentry kind=&quot;lib&quot; path=&quot;" />

        <echo file=".classpath"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<classpath>
    <classpathentry kind="src" path="${dcache-common.src}"/>
    <classpathentry kind="src" path="${cells.src}"/>
    <classpathentry kind="src" path="${dcache.src}"/>
    <classpathentry kind="src" path="${gplazma.src}"/>
    <classpathentry kind="src" path="${srm.src}"/>
    <classpathentry kind="src" path="${srmclient.src}"/>
    <classpathentry kind="src" path="${javatunnel.src}"/>
    <classpathentry kind="src" path="${unittest.src}"/>
    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
    <classpathentry kind="lib" path="${eclipse.entries}"/>
    <classpathentry kind="output" path="${buildDir}"/>
</classpath>
]]>
        </echo>
     </target>

    <target name="eclipse" description="creates an eclipse .project file" depends="eclipse-classpath">
        <echo file=".project"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
    <name>${project.name}</name>
    <comment></comment>
    <projects>
    </projects>
    <buildSpec>
        <buildCommand>
            <name>org.eclipse.jdt.core.javabuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
    </buildSpec>
    <natures>
        <nature>org.eclipse.jdt.core.javanature</nature>
    </natures>
</projectDescription>
]]>
        </echo>
     </target>

</project>
