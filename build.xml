<!-- $Id: build.xml,v 1.60 2007-10-26 12:22:06 tigran Exp $ -->

<project name="dCacheBuild" default="help" basedir="."
         xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!--=======================================================================
         If you want to change default values use -D option in command
         line, or modify property file
    -=======================================================================-->
    <property name="buildTop" location="${basedir}" />
    <loadproperties srcfile="build.properties" />
    <property environment="sysenv" />

    <!--=======================================================================
            load Ant Maven tasks
    -=======================================================================-->
    <path id="maven-ant-tasks.classpath" path="${antlib.dir}/maven-ant/maven-ant-tasks-2.1.3.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="antlib:org.apache.maven.artifact.ant"
             classpathref="maven-ant-tasks.classpath" />

    <!--=======================================================================
            import Maven POM properties
    -=======================================================================-->
    <property name="maven.home" value="/usr/share/maven2/"/>
    <property name="maven.pom" value="pom.xml"/>
    <artifact:pom id="pom" file="${maven.pom}" />

    <loadresource property="version">
        <propertyresource name="pom.version" />
        <filterchain>
            <replacestring from="-" to="" />
        </filterchain>
    </loadresource>

    <!--=======================================================================
            Version number constants
    -=======================================================================-->
    <property name="local.version" value=""/>
    <property name="build.id" value="1"/>
    <property name="build.number" value="${build.id}${local.version}"/>
    <property name="build.name" value="${version}-${build.number}"/>
    <echo message="Current Build version : ${build.name}"/>

    <!--=======================================================================
            import test and packaging targets
    -=======================================================================-->
    <import file="modules-builds/junit-build.xml" />
    <import file="modules-builds/server-rpm-build.xml" />
    <import file="modules-builds/server-tgz-build.xml" />
    <import file="modules-builds/server-deb-build.xml" />
    <import file="modules-builds/server-sol-pkg-build.xml" />
    <import file="modules-builds/srmclient-rpm-build.xml" />

    <!--=======================================================================
            primary build targets; most simply call Maven
    -=======================================================================-->
    <target name="common"
            description="Compile common package and create dcache-common.jar">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/common"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="cells"
            description="Compile cells package and create cells.jar">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/cells"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="srm"
            description="Compile srm package and create srm.jar">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/srm"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="dcache"
            description="Compile dcache package and create dcache.jar">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/dcache"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="webadmin"
            description="Compile and create webadmin.war">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/webadmin"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="javatunnel"
            description="Compile javatunnel package and create javatunnel.jar">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/javatunnel"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="srmclient"
            description="Compile srmclient package">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/srmclient"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="install-server-fhs"
            description="Build deploy-ready server FHS package">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/fhs"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
        <move todir="${server.root.dir}">
            <cutdirsmapper dirs="1"/>
            <fileset dir="modules/fhs/target/">
                <include name="dcache-fhs-*/**"/>
            </fileset>
        </move>
    </target>

    <target name="install-server"
            description="Build deploy-ready server OPT package">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="package"/>
            <arg value="-am"/>
            <arg value="-pl"/>
            <arg value="modules/opt"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
        <move todir="${server.root.dir}">
            <cutdirsmapper dirs="1"/>
            <fileset dir="modules/opt/target/">
                <include name="dcache-opt-*/**"/>
            </fileset>
        </move>
    </target>

    <target name="test"
            depends="-test-cond,-test-testcase,-test-testdir,-test-all"
            description="Run unit tests"/>

    <target name="cleanall" depends="clean" description="Remove everything produced by me.">
        <delete dir="${distDir}" />
        <delete dir="${buildDir}" />
    </target>

    <target name="clean" description="Remove temporary generated files.">
        <artifact:mvn pom="${maven.pom}"
                      mavenHome="${maven.home}"
                      fork="true">
            <arg value="clean"/>
        </artifact:mvn>
    </target>

    <target name="help">
        <echo message="" />
        <echo message="" />
        <echo message="Defined targets:" />
        <echo message="" />
        <echo message="     clean             : Remove intermidiet files (.class )" />
        <echo message="" />
        <echo message="     cleanall          : Remove all generated files." />
        <echo message="" />
        <echo message="     common            : Compile common package" />
        <echo message="" />
        <echo message="     cells             : Compile cells package" />
        <echo message="" />
        <echo message="     srm               : Compile srm and dependent packages" />
        <echo message="" />
        <echo message="     dcache            : Compile dcache and dependent packages" />
        <echo message="" />
        <echo message="     webadmin          : Compile webadmin and dcache" />
        <echo message="" />
        <echo message="     javatunnel        : Compile javatunnel and dependent packages" />
        <echo message="" />
        <echo message="     install-server    : build deploy-ready server package" />
        <echo message="                       : to overwrite default location use" />
        <echo message="                       : -Dserver.bin.dir=/path/to/install" />
        <echo message="" />
        <echo message="     install-srmclient : build deploy-ready srmcleint" />
        <echo message="                       : to overwrite default location use" />
        <echo message="                       : -Dsrmclient.bin.dir=/path/to/install" />
        <echo message="" />
        <echo message="     server.rpm        : generate dcache-server-xxx.rpm" />
        <echo message="     server.tgz        : generate dcache-server-xxx.tgz" />
        <echo message="     server.deb        : generate dcache-server-xxx.deb" />
        <echo message="     server.solpkg     : generate dcache-server-xxx.pkg (Solaris)" />
        <echo message="" />
        <echo message="     srmclient.rpm     : generate srmclient-xxx.rpm" />
        <echo message="" />
        <echo message="     test              : run all available unit tests" />
        <echo message="                       : use -Dtestcase=name" />
        <echo message="                       : to run tests **/name.java." />
        <echo message="                       : use -Dtestdir=project" />
        <echo message="                       : to run all tests in that sub-project." />
        <echo message="" />
        <echo message="" />
    </target>

    <target name="debug">
        <echoproperties />
    </target>
</project>
