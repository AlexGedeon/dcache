#!/bin/sh -f
#
# @(#) $Id: encp-put.sh.chkw,v 1.3 2002-10-17 16:16:33 cvs Exp $
#
# $Log: not supported by cvs2svn $
# Revision 1.2  2002/06/25 19:04:56  cvs
# add ability for have logfile on the nominally known data disks instead of always /tmp
#
# Revision 1.1  2002/02/20 23:37:36  cvs
# Added scripts directory and scripts needed for enstore interaction
#
# Revision 1.5  2001/11/30 21:46:04  wellner
# Added a new file to find ups and updated dependent scripts
#
# Revision 1.4  2001/11/30 20:46:47  wellner
# added an example of the configuration file needed for kerberos mapping, updated scripts to look in the right places for other scripts.
#
# Revision 1.3  2001/10/22 21:56:17  ivm
# Use external script in LIST command. Not tested yet.
#
# Revision 1.1  2001/09/20 02:43:02  ivm
# Initial CVS deposit
#
#
#
# Usage:
#  encp-put.sh put <uid> <gid> <local-file> <path-in-pnfsfs>
#  encp-put.sh mkd <uid> <gid> <path-in-pnfsfs>
#  encp-put.sh chkc <uid> <gid> <path-in-pnfsfs>
#
logdir() { for L in ~enstore/dcache-log /diska/log /data/log /data1/log /export/log /tmp; do
               if [ -d $L ]; then
                  echo $L
                  return
               fi
           done
}

LOGFILE=`logdir`/encp-put.log
mydir=`dirname $0`
#
echo ---------------------- >> $LOGFILE
date >> $LOGFILE
#
echo $0 $@ >>$LOGFILE
#
if [ $# -lt 4 ] ;then
   echo "Illegal usage : $0" >>$LOGFILE
   exit 4
fi
#
exec 2>> `logdir`/encp-put-more.out
set -x
cmd=$1
shift
uid=$1
gid=$2
case $cmd in
#-------------------
put)
   filepath=$3
   pnfsfspath=$4
   echo put user=$uid,$gid tmp=$filepath path=$pnfsfspath >> $LOGFILE
   #
   #XXX encp should be in the path when the dcache is run
   #So let's not set it up here anymore -- rw2 11/30/01
   #. /usr/local/etc/setups.sh >/dev/null 2>/dev/null
   #cd /home/bakken/enstore
   #. setup-enstore stk >/dev/null 2>/dev/null
   #
   echo "--------- encp command: --------" >> $LOGFILE
   echo encp $filepath $pnfsfspath >>$LOGFILE
   echo "--------- encp output: ----------" >> $LOGFILE
   encp $filepath $pnfsfspath >>$LOGFILE 2>&1
   sts=$?
   echo "--------- end of encp output. status = $sts" >> $LOGFILE
   if [ -f $pnfspath ] ;then
      chown $uid $pnfsfspath
      chgrp $gid $pnfsfspath
      echo uid/gid set >> $LOGFILE
      stat $pnfsfspath >> $LOGFILE
   fi
   exit $sts
   ;;
#-------------------
mkd)
   dirpath=$3
   echo mkdir user=$uid,$gid path=$dirpath >> $LOGFILE
   echo "--------- mkdir output: ----------" >> $LOGFILE
   $mydir/mkdir.sh $uid $gid $dirpath >> $LOGFILE 2>> $LOGFILE
   sts=$?
   echo "--------- end of mkdir output. status = $sts ----" >> $LOGFILE
   exit $sts
   #if [ -d $dirpath ]; then
   #  chown $uid $dirpath
   #  chgrp $gid $dirpath
   #  exit 0
   #else
   #  echo Failed. >> $LOGFILE
   #  exit 1
   #fi
   ;;
chkc)
   # check if the user has permissions to create the file
   echo chkc: $@ >> $LOGFILE
   path=$3
   echo chkc user=$uid,$gid path=$path >> $LOGFILE
   echo "--------- chkc output: ----------" >> $LOGFILE
   $mydir/chkaccess.sh $uid $gid c $path >> $LOGFILE 2>> $LOGFILE
   sts=$?
   echo "--------- end of chkc output. status = $sts ----" >> $LOGFILE
   exit $sts
   ;;
chkw)
   # check if the user has permissions to remove the file
   echo chkw: $@ >> $LOGFILE
   path=$3
   echo chkw user=$uid,$gid path=$path >> $LOGFILE
   echo "--------- chkw output: ----------" >> $LOGFILE
   $mydir/chkaccess.sh $uid $gid w $path >> $LOGFILE 2>> $LOGFILE
   sts=$?
   echo "--------- end of chkw output. status = $sts ----" >> $LOGFILE
   exit $sts
   ;;
chkr)
   # check if the user has permissions to read the file
   path=$3
   echo chkr user=$uid,$gid path=$path >> $LOGFILE
   echo "--------- chkr output: ----------" >> $LOGFILE
   $mydir/chkaccess.sh $uid $gid r $path >> $LOGFILE 2>> $LOGFILE
   sts=$?
   echo "--------- end of chkr output. status = $sts ----" >> $LOGFILE
   exit $sts
   ;;
list)
   # run /bin/ls under users uid/gid
   cwd=$3
   ptrn=${4:-.}
   echo list user=$uid,$gid cwd=$cwd ptrn=$ptrn>> $LOGFILE
   ($mydir/list.sh $uid $gid $cwd $ptrn 2>&1)
   exit 0
   ;;
#-------------------
*)
   exit 2
   ;;
esac
