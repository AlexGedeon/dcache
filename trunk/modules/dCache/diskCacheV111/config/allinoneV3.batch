set printout default 3
set printout CellGlue none 
#
onerror shutdown
#
#
check -strong setupFile
#
copy file:${setupFile} context:setupContext
#
#  import the variables into our $context.
#  don't overwrite already existing variables.
#
import context -c setupContext 
#
check -strong config
#check -strong pnfs
check -strong pool
check -strong dCapPort sshPort ftpPort  ftpBase  
check -strong httpdPort
check -strong images
check -strong ftpBase
check -strong billingDb
#
check -strong serviceLocatorPort serviceLocatorHost
#
create dmg.cells.services.RoutingManager  RoutingMgr
#
#   The LocationManager Part
#
#create dmg.cells.services.LocationManager lm \
#       "${serviceLocatorHost} ${serviceLocatorPort}"

#
create diskCacheV111.cells.BillingCell billing ${billingDb}
#
#    P o o l   M a n a g e r
#
create diskCacheV111.poolManager.PoolManagerV5 PoolManager \
   "${config}/PoolManager.conf  -replyObject"
#
create diskCacheV111.hsmControl.DummyStager Prestager "/"
#     P n f s    M a n a g e r
#
create diskCacheV111.cells.PnfsManager2 PnfsManager \
   "diskCacheV111.util.GenericInfoExtractor \
           -threads=4 \
           -defaultPnfsServer=${defaultPnfsServer} \
           -pnfs=${pnfs}"
#
#    P n f s    C l e a n e r
#    (only if possible)
#
onerror continue
#create diskCacheV111.cells.LazyCleaner cleaner " -trash=${trash}"
onerror shutdown
#
copy file:${pool} context:poolList
#
#    T h e   P o o l s
#
define context startPools endDefine
  create diskCacheV111.pools.MultiProtocolPool2 ${0} "${1} -version=3 -${2} -${3} -${4} -${5}"
endDefine
#
exec -run -loop=poolList context startPools
#
#    dCap    D o o r
#
create dmg.cells.services.login.LoginManager DCap \
            "${dCapPort} \
             diskCacheV111.doors.DCapDoor \
             -prot=telnet -localOk -interpreter=diskCacheV111.doors.DCapDoorInterpreterV3 \
             -maxLogin=15 \
             -brokerUpdateTime=30 \
             -protocolFamily=dcap \
             -loginBroker=LoginBroker"
create dmg.cells.services.login.LoginManager DCap2 \
            "22122 \
             diskCacheV111.doors.DCapDoor \
             -prot=telnet -localOk -interpreter=diskCacheV111.doors.DCapDoorInterpreterV3 \
             -maxLogin=30 \
             -brokerUpdateTime=30 \
             -protocolFamily=dcap \
             -protocolVersion=3.0 \
             -loginBroker=LoginBroker"
#
create dmg.cells.services.login.LoginBroker LoginBroker
#
define context TransferObserverSetup endDefine
  table define large 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
  table define small 6,8,4,5,9,10,11,15
endDefine
create diskCacheV111.cells.TransferObserverV1 TransferObserver \
              "default \
               -loginBroker=LoginBroker \
               -update=60 \
               -fieldMap=diskCacheV111.util.MapInfoFields \
               -mapFile=/etc/passwd "
#
#    F t p    D o o r(s)
#
create dmg.cells.services.login.LoginManager FtpV3 \
            "${ftpPort} \
             diskCacheV111.doors.FtpDoorV3 \
             -prot=raw \
             -root=${ftpBase} -export \
             -brokerUpdateTime=30 \
             -protocolFamily=ftp \
             -authenticator=pam \
             -usermap=pam \
             -loginBroker=LoginBroker"
#
#onerror continue
#create dmg.cells.services.login.LoginManager KFTP \
#            "${kerberosFtpPort} \
#             diskCacheV111.kerberos.FTPDoor3 \
#             -prot=raw \
#             -root=${ftpBase} -export"
#onerror shutdown
#
#
#    T h e  SSH D o o r
#
#   the rest is the ssh control path.
#   The current setup allows localhost login
#   without password. The 'server_key' and the
#   'host_key' are assumed to be in the .../jobs'
#   directory .
#
#    ssh-keygen -b  768 -f ./server_key -N ""
#    ssh-keygen -b 1024 -f ./host_key   -N ""
#
#    server_key :  768 bits
#    host_key   : 1024 bits
#
set context knownUsersFile    ${keyBase}/authorized_keys
set context serverKeyFile     ${keyBase}/server_key
set context hostKeyFile       ${keyBase}/host_key
#
#  security cell could be acm as well for simple
#  password checks. For pam authentication one
#  needs to specify the 'pam' cell here'
#  
set env     securityCell      pam
set env     AccessControlCell acm
set context userPasswordFile  cell:${securityCell}
#
#
create dmg.cells.services.login.SshKeyManager    skm

create dmg.cells.services.login.LoginManager slm \
      "${sshPort}  \
       dmg.cells.services.StreamLoginCell \
       -maxLogin=2 \
       -prot=ssh -auth=dmg.cells.services.login.SshSAuth_X"
#
create dmg.cells.services.login.LoginManager alm \
      "${adminPort}  \
       dmg.cells.services.login.StreamObjectCell \
       -prot=ssh -auth=dmg.cells.services.login.SshSAuth_A \
       diskCacheV111.admin.UserAdminShell"

create dmg.cells.services.login.user.AclCell ${AccessControlCell} ${keyBase}/users

create diskCacheV111.admin.PAMAuthentificator pam " -syspassword=/etc/shadow"
#
#   The web server part
#
define context httpdSetup endDefine
   set alias <home> context home.html
   set alias images directory ${images}
   set alias offline context offline.html
   set alias context context *
   set alias <default> context home.html
   set alias cellInfo context cellInfoTable.html -onError=offline
   set alias usageInfo context poolUsageTable.html -onError=offline
   set alias queueInfo context poolQueueTable.html -onError=offline
   set alias transfers context transfers.html -onError=offline
   set alias poolInfo class diskCacheV111.poolManager.HttpPoolMgrEngineV3
   set alias billing class diskCacheV111.cells.HttpBillingEngine
endDefine
#
#
define context offline.html endDefine
<html>
<head><title>dCache OFFLINE</title></head>
<body bgcolor=blue >
<center><img src="/images/eagle_logo.gif"></center>
<p>
<center>
<table border=0 width="80%">
<tr>
<td align=right width="50%"><img src="/images/trudey.gif"></td>
<td align=left width="50%"><img src="/images/sorry.gif"></td>
</tr>
</table>
</center>
</body>
</html>
endDefine
#
define context home.html endDefine
<html>
<head><title>Online dCache Home</title></head>
<body background="/images/bg.jpg" text="#000000" link="#000000" vlink="#000000" alink="#000000">

<br><br><br>

<center>
<table border="1" width="40%">
<tr>
<td align="center" valign="middle" >
<br><br>
<img src="/images/eagle-main.gif"><br><br>

<table>
<tr>
<td>

<a href="/cellInfo"><h1>Cell Services</h1></a>
<a href="/usageInfo"><h1>Pool (Space) Usage</h1></a>
<a href="/queueInfo"><h1>Pool Request Queues</h1></a>
<a href="/poolInfo"><h1>Pools</h1></a>
<a href="/billing/"><h1>Actions Log</h1></a>
<a href="/poolInfo/restoreHandler/*"><h1>Restore Queue</h1></a>
<a href="/poolInfo/restoreHandler/lazy"><h1>Lazy Restore Queue</h1></a>
<a href="/transfers"><h1>Transfers</h1></h1></a>

</td></tr>
</table>
<br>

</td></tr>
</table>

</center>
<br><br><br>
<hr>

</body>
</html>
endDefine
#
define context online.html endDefine
<html>
<head><title>dCache OFFLINE</title></head>
<body bgcolor=blue >
<center><img src="/images/eagle_logo.gif"></center>
<p>
<center>
<table border=0 width="90%" cellspacing=0 cellpadding=6>
<tr>
<td bgcolor=yellow align=left width="50%">Pool : poolA</td>
<td bgcolor=yellow align=right width="50%">4/5/2001</td>
</tr>
</table>
</center>
</body>
</html>
endDefine
#copy context:online.html context:setup.html
#
create dmg.cells.services.HttpServiceCell  httpd   ${httpdPort}
#
create diskCacheV111.cells.WebCollectorV3 collector \
    "PnfsManager PoolManager  -replyObject"
#
