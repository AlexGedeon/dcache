<project name="webadmin" basedir="." default="help">

    <!-- All to srcdir web-app part -->
    <property name="webappDir" value="${buildTop}/modules/webadmin" />
    <property name="webappDir.src" value="${webappDir}/src" />
    <property name="webappDir.webcontent" value="${webappDir}/webcontent/" />
    <property name="webappDir.webcontent.web-inf" value="${webappDir.webcontent}/WEB-INF" />

     <!-- CLASSPATH -->
    <path id="webappbuild.class.path">
        <pathelement location="${buildDir}/classes/dcache.jar" />
        <fileset dir="${libDir}/log4j/" includes="*.jar" />
        <fileset dir="${libDir}/slf4j/" includes="*.jar" />
        <fileset dir="${libDir}/wicket/" includes="*.jar" />
        <fileset dir="${libDir}/servlet-api/" includes="*.jar" />
        <!--<fileset dir="${libDir}/jetty/" includes="*.jar" />-->
    </path>

    <!-- PREPARE -->
    <target name="webadminPrepare">
        <delete dir="${webappBuildDir}" />
        <delete dir="${webappPackageDir}" />
        <mkdir dir="${webappBuildDir}" />
        <mkdir dir="${webappPackageDir}" />
        <mkdir dir="${webappPackageDir.web-inf.lib}" />
        <mkdir dir="${webappPackageDir.meta-inf}" />
        <mkdir dir="${webappPackageDir.web-inf}" />
        <mkdir dir="${webappPackageDir.classes}" />
    </target>

    <!--COMPILE CLASSES-->
    <target name="webadminCompile" depends="webadminPrepare">
        <javac debug="on" srcdir="${webappDir.src}" destdir="${webappBuildDir}">
            <classpath refid="webappbuild.class.path" />
        </javac>
        <!--for the unittests it is neccessary to have the classes included into
            junit-build.xml - easiest way seems to be a jar file-->
        <jar destfile="${webappBuildDir}/webadmin.jar" basedir="${webappBuildDir}"/>
    </target>

    <!-- PACKAGE -->
    <target name="webadminPackage" depends="webadminPrepare, webadminCompile">

        <!--copy static webcontent into the right places-->
        <copy todir="${webappPackageDir}">
            <fileset dir="${webappDir.webcontent}">
                <include name="**/*.html" />
                <include name="**/*.css" />
                <include name="**/*.gif" />
                <include name="**/*.jpg" />
                <include name="**/*.png" />
            </fileset>
        </copy>
        <!--get our special, generated background picture-->
        <copy file="${server.bin.dir}/docs/images/bg.jpg"
        tofile="${webappPackageDir}/images/bg.jpg" overwrite="true" />

        <!--copy the built files to the package directory-->
        <copy todir="${webappPackageDir.classes}">
            <fileset dir="${webappBuildDir}">
                <include name="**/*.class" />
            </fileset>
        </copy>
        <!--stick to the wicket specific directory structure ->
        put html and props in the right folders-->
        <copy todir="${webappPackageDir.classes}">
            <fileset dir="${webappDir.src}">
                <include name="**/*.html" />
                <include name="**/*.properties" />
            </fileset>
        </copy>

	<!-- with all resources in place, create the war file -->
        <war destfile="${webappPackageDir}/webadmin.war" webxml="${webappDir.webcontent.web-inf}/web.xml" basedir="${webappPackageDir}">
            <classes dir="${webappPackageDir.classes}" />
        </war>
         <!--now copy the .war into its final location (webapps folder) -->
        <copy file="${webappPackageDir}/webadmin.war" tofile="${server.bin.dir}/classes/webapps/webadmin.war" overwrite="true" />
        <delete file="${webappPackageDir}/webadmin.war" />
    </target>

</project>

