/*
 * Automatically generated by jrpcgen 1.0.7 on 2/21/09 1:22 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.dcache.chimera.nfs.v3.xdr;

import java.io.IOException;

import org.dcache.xdr.OncRpcException;
import org.dcache.xdr.XdrAble;
import org.dcache.xdr.XdrDecodingStream;
import org.dcache.xdr.XdrEncodingStream;

public class mknoddata3 implements XdrAble {
    public int type;
    public devicedata3 device;
    public sattr3 pipe_attributes;

    public mknoddata3() {
    }

    public mknoddata3(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    @Override
    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        xdr.xdrEncodeInt(type);
        switch ( type ) {
        case ftype3.NF3CHR:
        case ftype3.NF3BLK:
            device.xdrEncode(xdr);
            break;
        case ftype3.NF3SOCK:
        case ftype3.NF3FIFO:
            pipe_attributes.xdrEncode(xdr);
            break;
        default:
            break;
        }
    }

    @Override
    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        type = xdr.xdrDecodeInt();
        switch ( type ) {
        case ftype3.NF3CHR:
        case ftype3.NF3BLK:
            device = new devicedata3(xdr);
            break;
        case ftype3.NF3SOCK:
        case ftype3.NF3FIFO:
            pipe_attributes = new sattr3(xdr);
            break;
        default:
            break;
        }
    }

}
// End of mknoddata3.java
