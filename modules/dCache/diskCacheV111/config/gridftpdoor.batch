set printout default 2
set printout CellGlue none
onerror shutdown
#
check -strong setupFile
#
copy file:${setupFile} context:setupContext
#
#  import the variables into our $context.
#  don't overwrite already existing variables.
#
import context -c setupContext

#
#  Cell communication
#
exec -run -shell file:${ourHomeDir}/config/tunnel.fragment

#
#      GridFTP Door
#
#    Default for all our variables
#
onerror continue
set context -c gsiFtpPortNumber        2811
set context -c spaceReservation        false
set context -c spaceReservationStrict  false
set context -c performanceMarkerPeriod 70
set context -c kpwdFile          ${ourHomeDir}/etc/dcache.kpwd
set context -c useGPlazmaAuthorizationCell    true
set context -c delegateToGPlazma    false
set context -c useGPlazmaAuthorizationModule  false
set context -c gplazmaPolicy     ${ourHomeDir}/etc/dcachesrm-gplazma.policy
set context -c gsiftpPoolManagerTimeout  5400
set context -c gsiftpPoolTimeout          600
set context -c gsiftpPnfsTimeout          300
set context -c gsiftpMaxRetries            80
set context -c gsiftpMaxStreamsPerClient   10
set context -c gsiftpDefaultStreamsPerClient  1
set context -c gsiftpDeleteOnConnectionClosed true
set context -c gsiftpMaxLogin                 100
set context -c clientDataPortRange            20000:25000
set context -c gsiftpAdapterInternalInterface ""
set context -c gsiftpIoQueue                  ""
set context -c overwriteEnabled false
set context -c gsiftpAllowPassivePool false
set context -c PermissionHandlerDataSource diskCacheV111.services.PnfsManagerFileMetaDataSource
set context -c FtpTLogDir ""
set context -c permissionHandler diskCacheV111.services.acl.UnixPermissionHandler
#  ----- Tape Protection
set context -c stageConfigurationFilePath   ""
#  ----- ACL-variables
set context -c aclTable      t_acl
set context -c aclConnDriver org.postgresql.Driver
set context -c aclConnUrl    jdbc:postgresql://localhost/chimera?prepareThreshold=3
set context -c aclConnUser   postgres
set context -c aclConnPswd   ""

#
#  ----  Usage of Srm Space Manager
#
#   If srmSpaceManagerEnabled is on we need to use SrmSpaceManager
#   as both poolManager and poolProxy
#
onerror continue
set context -c srmSpaceManagerEnabled no
define env srmSpaceManagerOn.exe endExe
  set env -c gsiftpPoolProxy        "SrmSpaceManager"
  set env -c gsiftpPoolManager      "SrmSpaceManager"
endExe
eval ${srmSpaceManagerEnabled} yes ==
set env srmSpaceManagerIsOn ${rc}
exec env srmSpaceManagerOn.exe -run -ifok=srmSpaceManagerIsOn
set context -c gsiftpPoolProxy                "PoolManager"
set context -c gsiftpPoolManager              "PoolManager"
#
#
onerror shutdown
#
create dmg.cells.services.login.LoginManager GFTP-${thisHostname} \
            "${gsiFtpPortNumber} \
             -export \
             diskCacheV111.doors.GsiFtpDoorV1 \
             -prot=raw \
             -clientDataPortRange=${clientDataPortRange} \
             -poolProxy=${gsiftpPoolProxy}  \
             -poolManager=${gsiftpPoolManager}  \
             -root=${ftpBase} \
             -maxLogin=${gsiftpMaxLogin} \
             -brokerUpdateTime=5 \
             -protocolFamily=gsiftp \
             -protocolVersion=1.0.0 \
             -loginBroker=LoginBroker \
             -space-reservation=${spaceReservation} \
             -space-reservation-strict=${spaceReservationStrict} \
             -perfMarkerPeriod=${performanceMarkerPeriod} \
             -poolManagerTimeout=${gsiftpPoolManagerTimeout} \
             -poolTimeout=${gsiftpPoolTimeout} \
             -pnfsTimeout=${gsiftpPnfsTimeout} \
             -maxRetries=${gsiftpMaxRetries} \
             -maxStreamsPerClient=${gsiftpMaxStreamsPerClient} \
             -defaultStreamsPerClient=${gsiftpDefaultStreamsPerClient} \
             -deleteOnConnectionClosed=${gsiftpDeleteOnConnectionClosed} \
             -use-gplazma-authorization-cell=${useGPlazmaAuthorizationCell} \
             -delegate-to-gplazma=${delegateToGPlazma} \
             -use-gplazma-authorization-module=${useGPlazmaAuthorizationModule} \
             -gplazma-authorization-module-policy=${gplazmaPolicy} \
             -io-queue=${gsiftpIoQueue} \
             -kpwd-file=${kpwdFile} \
             -permission-handler=${permissionHandler} \
             -aclTable=${aclTable} \
             -aclConnDriver=${aclConnDriver} \
             -aclConnUrl=${aclConnUrl} \
             -aclConnUser=${aclConnUser} \
             -aclConnPswd=${aclConnPswd} \
             -stageConfigurationFilePath=${stageConfigurationFilePath} \
             -ftp-adapter-internal-interface=${gsiftpAdapterInternalInterface} \
             -meta-data-provider=${PermissionHandlerDataSource} \
             -overwrite=${overwriteEnabled} \
             -allowPassivePool=${gsiftpAllowPassivePool} \
             -tlog=${FtpTLogDir} \
"
#             -tlog=/tmp/dcache-ftp-tlog \
#             -gsi-helper-cmd=${homeRoot}/dcache-deploy/gsint/gsint.sh \
#             -retryWait=60 \

