set printout default 2
set printout CellGlue none

onerror shutdown

#
check -strong setupFile
#
copy file:${setupFile} context:setupContext
#
#  import the variables into our $context.
#  don't overwrite already existing variables.
#
import context -c setupContext
#
#   Make sure we got what we need.
#
check -strong pool serviceLocatorHost serviceLocatorPort

copy file:${pool} context:poolList

create dmg.cells.services.RoutingManager  RoutingMgr

create dmg.cells.services.LocationManager lm \
     "${serviceLocatorHost} ${serviceLocatorPort}"
#
onerror continue

  set context -c poolIoQueue ""
  set context -c checkRepository        true
  set context -c waitForRepositoryReady false
  set context -c gsiftpAllowPassivePool true
  set context -c metaDataRepository     org.dcache.pool.repository.meta.file.FileMetaDataRepository
  set context -c metaDataRepositoryImport ""
  set context -c gsiftpReadAhead        16777216
  set context -c allowCleaningPreciousFiles false

onerror shutdown

#
# Set poolupDestination to broadcast if hsmCleaner is enabled
#
onerror continue
define env hsmCleanerEnabled endDefine
  set context -c poolupDestination broadcast
endDefine
eval ${hsmCleaner} enabled ==
exec env hsmCleanerEnabled -run -ifok
set context -c poolupDestination PoolManager
onerror shutdown


#
# NIO ftp mover
#
define context MoverMap endDefine
   movermap define DCap-3  org.dcache.pool.movers.DCapProtocol_3_nio
   movermap define GFtp-1  org.dcache.pool.movers.GFtpProtocol_2_nio
   movermap define GFtp-2  org.dcache.pool.movers.GFtpProtocol_2_nio
endDefine

# This defines how to instantiate the pool code
###############################################
define context startPools endDefine
  create org.dcache.cells.UniversalSpringCell ${0} \
    "!MoverMap classpath:org/dcache/pool/classic/pool.xml \
    -export -poolname=${0} -pooldir=${1} \
    -setupClass=pool -setupFile=${1}/setup \
    -allowPassivePool=${gsiftpAllowPassivePool} \
    -allowMmap=false \
    -${2} -${3} -${4} -${5} -${6} -${7} -${8}"
endDefine

exec -run -loop=poolList context startPools


