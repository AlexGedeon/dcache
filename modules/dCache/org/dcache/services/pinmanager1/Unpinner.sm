%{

%}


%class Unpinner
%package org.dcache.services.pinmanager1
%access package
%import diskCacheV111.vehicles.Message
%import diskCacheV111.vehicles.PnfsFlagMessage
%import diskCacheV111.vehicles.PnfsGetCacheLocationsMessage
%import diskCacheV111.vehicles.PoolSetStickyMessage
%import diskCacheV111.vehicles.PnfsGetFileMetaDataMessage;

%start UnpinnerFSM::Init
%map UnpinnerFSM
%%
Init
{
        go
                [ ctxt.isOldStylePin() ]
                DeletingPnfsFlags
                {
                }
        go
                [ ctxt.isRetry() ]
                GettingPnfsMetaData
                {
                }
        go
                UnsettingStickyFlags
                {
                }
}
DeletingPnfsFlags
Entry
{
        deletePnfsFlags();
}
{
        timeout
                nil
                {
                        deletePnfsFlags();
                }
        answerArrived(message: PnfsFlagMessage) 
                [ message.getReturnCode() == 0 ]
                FindingCacheLocations
                {

                }

        answerArrived(message: PnfsFlagMessage) 
               [ ctxt.isRetry() ]
               GettingPnfsMetaData
               {
               }

        answerArrived(message: PnfsFlagMessage) 
               Done
               {
                        fail(message.getErrorObject());    
               }
 }

GettingPnfsMetaData
Entry
{
        getPnfsMetadata();
}
{
        timeout
                nil
                {
                        getPnfsMetadata();
                }
        answerArrived(message: PnfsGetFileMetaDataMessage) 
                [ message.getReturnCode() != 0 ]
                Done
                {
                   fileRemoved();
                }
        answerArrived(message: PnfsGetFileMetaDataMessage) 
                UnsettingStickyFlags
                {
                  
                }
}


FindingCacheLocations
Entry
{
        findCacheLocations();
}
{
        timeout 
                nil
                {
                        findCacheLocations();
                }
        answerArrived(message: PnfsGetCacheLocationsMessage)
                [ message.getReturnCode() == 0 ]
                UnsettingStickyFlags
                {
                        setLocations(message.getCacheLocations());
                        
                }
        answerArrived(message: PnfsGetCacheLocationsMessage)
                Done
                {
                        fail(message.getErrorObject());
                        
                }
}

UnsettingStickyFlags
Entry
{
        unsetStickyFlags();
}
{
        unsetStickyFlagMessagesSent
                Done
                {
                   succeed();
                }

           timeout 
                nil
                {
                        unsetStickyFlags();
                }

        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() == 0 ]
                Done
                {
                        succeed();
                        
                }

        answerArrived(message: PoolSetStickyMessage)
                Done
                {
                        fail(message.getErrorObject());
                        
                }

}

Done
{

}

Default
{
        answerArrived(message: Message)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: Message)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        answerArrived(message: PnfsFlagMessage)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: PnfsFlagMessage)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        answerArrived(message: PnfsGetFileMetaDataMessage)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: PnfsGetFileMetaDataMessage)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        answerArrived(message: PnfsGetCacheLocationsMessage)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: PnfsGetCacheLocationsMessage)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: PoolSetStickyMessage)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        exceptionArrived(exception: Exception)
                Done
                {
                        fail(exception);
                }
}


%%