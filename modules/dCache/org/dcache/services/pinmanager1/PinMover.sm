%{
// PinMover task for the pin manager
%}


%class PinMover
%package org.dcache.services.pinmanager1
%access package
%import diskCacheV111.vehicles.*
%import diskCacheV111.util.CacheException

%start PinMoverFSM::Init
%map PinMoverFSM
%%
Init
{
        go
                MarkingSticky
                {
                }
}


MarkingSticky
Entry
{
        markSticky();
}
{
        timeout
                Done
                {
                        fail("pool timeout");
                }
        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() == 0 && ctxt.pinMoveSucceed() ]
                UnsettingStickyFlags
                {
                }
        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() == 0 ]
                Done
                {
                }
        answerArrived(message: PoolSetStickyMessage)
                Done
                {
                        fail(message.getErrorObject());
                }
}

UnsettingStickyFlags
Entry
{
        unsetStickyFlags();
}
{
        unsetStickyFlagMessagesSent
                Done
                {
                   succeed();
                }

           timeout
                nil
                {
                        fail("unset sticky flag timeout");
                }

        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() == 0 ||
                  message.getReturnCode() == CacheException.FILE_NOT_IN_REPOSITORY ]
                Done
                {
                        succeed();

                }

        answerArrived(message: PoolSetStickyMessage)
                Done
                {
                        fail(message.getErrorObject());

                }

}

Done
{
}

Default
{
        answerArrived(message: Message)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());
                }
        answerArrived(message: Message)
                Done
                {
                        fail("Unexpected answer received in state "
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        answerArrived(message: PoolSetStickyMessage)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());
                }
        answerArrived(message: PoolSetStickyMessage)
                Done
                {
                        fail("Unexpected answer received in state "
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        exceptionArrived(exception: Exception)
                Done
                {
                        fail(exception);
                }
}


%%
