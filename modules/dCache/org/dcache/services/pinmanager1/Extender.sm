%{

%}


%class Extender
%package org.dcache.services.pinmanager1
%access package
%import diskCacheV111.vehicles.Message
%import diskCacheV111.vehicles.PoolSetStickyMessage

%start ExtenderFSM::Init
%map ExtenderFSM
%%
Init
{
        go
                [ ctxt.getPool() == null || ctxt.getPool().equals("unknown") ]
                Done
                {
                        succeed();
                }
        go
                ExtendingStickyFlags
                {

                }
}

ExtendingStickyFlags
Entry
{
        extendStickyFlagLifetime();
}
{
        timeout
                nil
                {
                        extendStickyFlagLifetime();
                }
        success(message: PoolSetStickyMessage)
                Done
                {
                        succeed();
                }
        failure(rc: Integer, error: Object)
                Done
                {
                       fail(error);
                }
        noroute
                Done
                {
                        fail("No route to pool");
                }
}

Done
{
}

Default
{
        failure(rc: Integer, error: Object)
                Done
                {
                        fail(error);
                }
        noroute
                Done
                {
                        fail("Communication failure");
                }
        timeout
                Done
                {
                        fail("Communication timeout");
                }
        success(message: PoolSetStickyMessage)
                Done
                {
                        fail("Unexpected answer received in state "
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
}


%%
