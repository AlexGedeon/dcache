%{

%}


%class Unpinner
%package org.dcache.services.pinmanager
%access package
%import diskCacheV111.vehicles.Message
%import diskCacheV111.vehicles.PnfsFlagMessage
%import diskCacheV111.vehicles.PnfsGetCacheLocationsMessage

%start UnpinnerFSM::DeletingPnfsFlags
%map UnpinnerFSM
%%

DeletingPnfsFlags
Entry
{
        deletePnfsFlags();
}
{
        timeout
                nil
                {
                        deletePnfsFlags();
                }
        answerArrived(message: PnfsFlagMessage) 
                [ message.getReturnCode() == 0 ]
                FindingCacheLocations
                {

                }
}

FindingCacheLocations
Entry
{
        findCacheLocations();
}
{
        timeout 
                nil
                {
                        findCacheLocations();
                }
        answerArrived(message: PnfsGetCacheLocationsMessage)
                [ message.getReturnCode() == 0 ]
                Done
                {
                        unsetStickyFlags(message.getCacheLocations());
                        succeed();
                }
}

Done
{

}

Default
{
        answerArrived(message: Message)
                [ message.getReturnCode() != 0 ]
                Done
                {
                        fail(message.getErrorObject());    
                }
        answerArrived(message: Message)
                Done
                {
                        fail("Unexpected answer received in state " 
                             + context.getState().getName()
                             + ": " + context.getTransition());
                }
        exceptionArrived(exception: Exception)
                Done
                {
                        fail(exception);
                }
}


%%