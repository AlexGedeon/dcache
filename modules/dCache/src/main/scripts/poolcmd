#!/bin/sh
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

node=`uname -n| sed -e 's/\([^\.]\)\..*/\1/'`

if [ -r /usr/local/bin/ENSTORE_HOME ]; then
   . /usr/local/bin/ENSTORE_HOME
else
   echo `date` ERROR: Can NOT determine E_H.  Add /usr/local/bin/ENSTORE_HOME link
   exit 1
fi

set +u;. $E_H/dcache-deploy/config/dCacheSetup; set -u

poollist="`cat ~enstore/dcache-deploy/config/[rw]*.poollist`"

# this is cheap argument processing. Must be in this order when checking. I want it cheap!
if [ "${1:-}" = "-p" ] ; then poollist="`cat ~enstore/dcache-deploy/config/*$2*.poollist`"; shift; shift; fi

command=${1:-info}
TMP=/tmp/$$-1
cmd="ssh -vvv -1 -x -t -a -c blowfish -p ${sshPort} $serviceLocatorHost"

oldIFS="$IFS"
IFS="
"
for line in $poollist;do
  pool=`echo $line | awk '{print $1}'`
  #Domain="`echo $line | cut -f2 -d-`Domain"
  #if [ `echo $Domain | grep -c '^data'` -ne 0 ]; then Domain=fcdf$Domain;fi  #HACK!
  Domain="${pool}Domain"
  Domain=`echo $Domain | sed -e 's/r-data/r-fcdfdata/' | sed -e 's/w-data/w-fcdfdata/'` #HACK!
  rm -f $TMP
  echo "exit
set dest $pool@$Domain
$command
exit
exit" > $TMP

   echo `date` "$pool@$Domain ssh -c blowfish -p $sshPort $serviceLocatorHost"
   cat $TMP | ssh -c blowfish -p ${sshPort} $serviceLocatorHost 2>/dev/null
#   cmd="ssh -vvv -1 -x -t -a -c blowfish -p ${sshPort} $serviceLocatorHost"
#   $E_H/dcache-deploy/dcache-fermi-config/timed_cmd.sh --buffer_stdin 60 $cmd <$TMP
  
done
IFS="$oldIFS"
rm -f $TMP
