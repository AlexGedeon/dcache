diff -Naur cog-jglobus-1.8.0.orig/src/org/globus/gsi/proxy/ProxyPathValidator.java cog-jglobus-1.8.0/src/org/globus/gsi/proxy/ProxyPathValidator.java
--- cog-jglobus-1.8.0.orig/src/org/globus/gsi/proxy/ProxyPathValidator.java	2009-12-10 04:35:13.000000000 +0100
+++ cog-jglobus-1.8.0/src/org/globus/gsi/proxy/ProxyPathValidator.java	2010-10-14 10:30:43.419406003 +0200
@@ -887,12 +887,21 @@
 	//check date validity of CRL
         boolean validCRL = checkCRLValidity(crl);
         if (validCRL) {
-	    if (crl.isRevoked(cert)) {
-		throw new 
-                    ProxyPathValidatorException(ProxyPathValidatorException
-                                                .REVOKED, cert,
-                                                i18n.getMessage("proxyErr21",
-                                                                cert.getSubjectDN().getName()));
+            /* One would have thought that a CRL is immutable and thus
+             * thread safe, however inside the ASN1 parse tree we find
+             * LazyDERSequence. LazyDERSequence is parsed lazily and
+             * does so in a non-thread safe manner. One may very well
+             * classify this as a bouncy castle bug, but as a
+             * workaround synchronizing on the CRL solves the problem.
+             */
+            synchronized (crl) {
+                if (crl.isRevoked(cert)) {
+                    throw new
+                        ProxyPathValidatorException(ProxyPathValidatorException
+                                                    .REVOKED, cert,
+                                                    i18n.getMessage("proxyErr21",
+                                                                    cert.getSubjectDN().getName()));
+                }
             }
 	} else {
             throw new 
