#!/bin/sh
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

node=`uname -n| sed -e 's/\([^\.]\)\..*/\1/'`

if [ -r /usr/local/bin/ENSTORE_HOME ]; then
   . /usr/local/bin/ENSTORE_HOME
else
   echo `date` ERROR: Can NOT determine E_H.  Add /usr/local/bin/ENSTORE_HOME link
   exit 1
fi

set +u
. $E_H/dcache-deploy/config/dCacheSetup
. $E_H/dcache-deploy/dcache-fermi-config/mail_people
set -u  

log=/tmp/retry.waiting.output

input=/tmp/retry.waiting.input
rcls=/tmp/retry.waiting.rcls
waiting=/tmp/retry.waiting.waiting
nosuchhost=/tmp/retry.waiting.nosuchhost
waitout=/tmp/retry.waiting.output
nshout=/tmp/retry.waiting.nshoutput
input2=/tmp/retry.waiting.input2
input3=/tmp/retry.waiting.input3
reason=/tmp/retry.waiting.reason
rm -f $input $rcls $waiting $nosuchhost $waitout $nshout $input2 $input3 $reason 2>/dev/null

echo "exit
set dest PoolManager
rc ls
exit
exit
">$input

cmd="ssh -c blowfish -p $sshPort $serviceLocatorHost"
$E_H/dcache-deploy/dcache-fermi-config/timed_cmd.sh --buffer_stdin 60 $cmd < $input 2>/dev/null | tr -d "\r" > $rcls 
#cat $rcls

egrep -i 'suspended|waiting' $rcls | egrep -iv 'NoSuchHost' | awk '{print $1}' > $waiting
egrep -i 'NoSuchHost' $rcls | awk '{print $1}' > $nosuchhost
#echo $nosuchhost `cat $nosuchhost`

size=`stat  $waiting|grep Size |awk '{print $2 }'`
if [ "$size" != "0" ]; then 
  
    echo "exit
set dest PoolManager
" >$input2

    cat $waiting| while read w rest; do
       pnfsid=`echo $w | cut -f1 -d@`
       pnfs_info=`cat "/pnfs/fs/usr/.(access)($pnfsid)(4)" 2>/dev/null`
       if [ -n "$pnfs_info" ]; then 
          vol=`echo $pnfs_info | awk '{print $1}'`
          if [ -n "$vol" ]; then
             vol_info=`$ENSTORE_DIR/bin/enstore vol --vol $vol`
	     sys_inhibit=`echo $vol_info | egrep system_inhibit`
  	     if [ -z "$sys_inhibit" ]; then
                echo rc failed $w 902 902 >>$input2
	        echo failing $w on $vol rc=902, can not find system_inhibit info. does volume exist? >>$reason
		echo ... pnfsid= $pnfsid >>$reason
		echo ... pnfs_info= $pnfs_info >>$reason
		echo ... vol= $vol >>$reason
		echo ... vol_info= $vol_info >>$reason
		echo >>$reason
             else
	        not_allowed=`echo $sys_inhibit | egrep NOTALLOWED`
	        if [ -z "$not_allowed" ]; then 
                   echo rc retry $w -refresh-si >>$input2
		   echo retrying $w on vol $vol >>$reason
 		   echo ... pnfs_info= $pnfs_info >>$reason
		   echo >>$reason
	        else
                   echo rc failed $w 903 903 >>$input2
  	           echo failing $w on $vol rc=903, volume is set to NOTALLOWED >>$reason
 		   echo ... pnfs_info= $pnfs_info >>$reason
		   echo >>$reason
	        fi
             fi
          else
             echo rc failed $w 904 904 >>$input2
	     echo failing $w on $vol rc=940, can not find vol in pnfs layer 4 >>$reason
	     echo ... pnfsid= $pnfsid >>$reason
	     echo ... pnfs_info= $pnfs_info >>$reason
	     echo >>$reason
          fi
       else
          echo rc failed $w 905 905 >>$input2
          echo failing $w  rc=905, can not find vol in pnfs info at all >>$reason
          echo ... pnfsid= $pnfsid >>$reason
	  echo >>$reason
       fi
    done

    echo "exit
exit" >>$input2

###    echo "" >>$log
###    echo `date` >>$log
###    cat $waiting >>$log
###    echo "" >>$log

    cmd="ssh -c blowfish -p $sshPort $serviceLocatorHost"
    $E_H/dcache-deploy/dcache-fermi-config/timed_cmd.sh --buffer_stdin 60 $cmd < $input2 2>/dev/null | tr -d "\r" > $waitout
    ###cat $waiting $waitout 2>/dev/null
fi

size=`stat  $nosuchhost|grep Size |awk '{print $2 }'`
if [ "$size" != "0" ]; then 
  
    echo "exit
set dest PoolManager
" >$input3
    cat $nosuchhost| while read w rest; do
       echo rc failed $w 901 901 >>$input3
       echo failing $w rc=901, no such host >>$reason
       echo >>$reason
    done
    echo "exit
exit" >>$input3

###    echo "" >>$log
###    echo `date` >>$log
###    cat $nosuchhost >>$log
###    echo "" >>$log

    cmd="ssh -c blowfish -p $sshPort $serviceLocatorHost"
    $E_H/dcache-deploy/dcache-fermi-config/timed_cmd.sh --buffer_stdin 60 $cmd < $input3 2>/dev/null | tr -d "\r" > $nshout
    ###cat $nosuchhost $nshout 2>/dev/null
fi

###if [ `wc $waiting  |awk '{print $1}'` -ge 30 -o `wc $nosuchhost | awk '{print $1}'` -ge 1 ]; then    
if [ `wc $waiting  |awk '{print $1}'` -ge 1 -a 1 -eq 2 ]; then    
   rm -f /tmp/retry.waiting.prob 2>/dev/null
   echo "

There are 3 reasons for this mail:

a. The queues in enstore are very large causing a 
   long wait before transfers start.  The dcache 
   waits 1.5 hours before complaining, and retries
   80 times on its own.  This mail is not sent
   unless there are more than about 10 waiting 
   transfers.

b. The dcache is can not read files from enstore - 
   most likely due to NOACCESS tapes.  You can
   get the tape list from the Lazy Restore Queue Web Page

c. User requests from behind NATs are being killed.  
   These requests have NoSuchHost in their fields.


" > /tmp/retry.waiting.prob 
    ###mail_people=bakken@fnal.gov

   (date; cat $reason /tmp/retry.waiting.prob $waiting $waitout $nosuchhost $nshout 2>/dev/null) | /usr/bin/Mail -s "$serviceLocatorHost rc retry `date`"  $mail_people
   rm -f /tmp/retry.waiting.prob 2>/dev/null
fi

date
cat $reason $waitout $nosuchhost $nshout 2>/dev/null

rm -f $input $rcls $waiting $nosuchhost $waitout $nshout $input2 $input3 $reason 2>/dev/null
