<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <context:load-time-weaver/>

  <bean id="properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <description>Imported configuration data</description>
    <property name="location" value="arguments:"/>
  </bean>

  <bean id="message-thread-pool"
        class="java.util.concurrent.ThreadPoolExecutor"
        destroy-method="shutdown">
    <description>Thread pool for message processing</description>
    <constructor-arg value="${threadsCore}"/>
    <constructor-arg value="${threadsMax}"/>
    <constructor-arg value="${threadsKeepAliveTime}"/>
    <constructor-arg value="#{ T(java.util.concurrent.TimeUnit).SECONDS }"/>
    <constructor-arg>
      <bean class="java.util.concurrent.ArrayBlockingQueue">
        <constructor-arg value="${threadsQueueMax}"/>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="scheduled-executor"
        class="java.util.concurrent.Executors"
        factory-method="newScheduledThreadPool"
        destroy-method="shutdown">
      <constructor-arg value="2"/>
  </bean>

  <bean id="pnfs-stub" class="org.dcache.cells.CellStub">
      <description>PNFS manager communication stub</description>
      <property name="destination" value="${pnfsManager}"/>
      <property name="timeout" value="300000"/>
  </bean>

  <bean id="pool-manager-stub" class="org.dcache.cells.CellStub">
      <description>Pool manager communication stub</description>
      <property name="destination" value="${poolManager}"/>
      <property name="timeout" value="3600000"/>
  </bean>

  <bean id="pool-stub" class="org.dcache.cells.CellStub">
      <description>Pool communication stub</description>
      <property name="timeout" value="90000"/>
  </bean>

  <bean id="pinmanager" class="org.dcache.pinmanager.PinManager"
        init-method="init">
      <property name="expirationPeriod" value="${expirationFrequency}"/>
      <property name="poolStub" ref="pool-stub"/>
      <property name="dao" ref="dao"/>
      <property name="executor" ref="scheduled-executor"/>
  </bean>

  <bean id="pin-processor" class="org.dcache.pinmanager.PinRequestProcessor"
        init-method="init">
      <description>Processes pin requests</description>
      <property name="poolManagerStub" ref="pool-manager-stub"/>
      <property name="poolStub" ref="pool-stub"/>
      <property name="pnfsStub" ref="pnfs-stub"/>
      <property name="dao" ref="dao"/>
      <property name="executor" ref="scheduled-executor"/>
      <property name="stagePermission" ref="stage-permission"/>
      <property name="maxLifetime" value="${maxPinDuration}"/>
  </bean>

  <bean id="unpin-processor" class="org.dcache.pinmanager.UnpinRequestProcessor">
      <description>Processes unpin requests</description>
      <property name="dao" ref="dao"/>
      <property name="authorizationPolicy" ref="pdp"/>
  </bean>

  <bean id="move-pin-processor" class="org.dcache.pinmanager.MovePinRequestProcessor">
      <description>Processes pin extension requests</description>
      <property name="dao" ref="dao"/>
      <property name="poolStub" ref="pool-stub"/>
      <property name="authorizationPolicy" ref="pdp"/>
      <property name="maxLifetime" value="${maxPinDuration}"/>
  </bean>

  <bean id="pinmanager-cli" class="org.dcache.pinmanager.PinManagerCLI">
      <description>Command line interface</description>
      <property name="pinManager" ref="pinmanager"/>
      <property name="pnfsStub" ref="pnfs-stub"/>
      <property name="dao" ref="dao"/>
      <property name="pinProcessor" ref="pin-processor"/>
      <property name="unpinProcessor" ref="unpin-processor"/>
      <property name="moveProcessor" ref="move-pin-processor"/>
  </bean>

  <bean id="pdp" class="org.dcache.pinmanager.DefaultAuthorizationPolicy">
      <description>Makes authorization decisions</description>
  </bean>

  <bean id="stage-permission" class="diskCacheV111.util.CheckStagePermission">
      <description>Stage permission checker</description>
      <constructor-arg value="${stageConfigurationFilePath}"/>
  </bean>

  <!--  DATABASE BEANS
  -->

  <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
    <description>Database schema manager</description>
    <property name="dataSource">
      <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbcDriver}"/>
        <property name="url" value="${jdbcUrl}"/>
        <property name="username" value="${dbUser}"/>
        <property name="password" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${pgPass}', '${jdbcUrl}', '${dbUser}', '${dbPass}') }"/>
      </bean>
    </property>
    <property name="changeLog" value="classpath:${db.schema.changelog}"/>
    <property name="shouldUpdate" value="${db.schema.auto}"/>
  </bean>

  <bean id="pmf"
        class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean"
        depends-on="liquibase">
    <description>JDO connection</description>
    <property name="jdoProperties">
      <props>
        <prop key="javax.jdo.PersistenceManagerFactoryClass">
        org.datanucleus.api.jdo.JDOPersistenceManagerFactory</prop>
        <prop key="javax.jdo.option.ConnectionURL">${jdbcUrl}</prop>
        <prop key="javax.jdo.option.ConnectionUserName">${dbUser}</prop>
        <prop key="javax.jdo.option.ConnectionPassword">#{ T(diskCacheV111.util.Pgpass).getPassword('${pgPass}', '${jdbcUrl}', '${dbUser}', '${dbPass}') }</prop>
        <prop key="javax.jdo.option.ConnectionDriverName">${jdbcDriver}</prop>
        <prop key="datanucleus.PersistenceUnitName">PinManager</prop>
        <prop key="datanucleus.connectionPoolingType">BoneCP</prop>

        <!-- The following properties provides configuration for BoneCP via
             DataNucleus.  Please note that DataNucleus provides control of
             only a limited set of BoneCP's configuration.  Also, the mapping
             between the DataNucleus property name and BoneCP configuration
             method names is not obvious.  These mappings are documented here
             to aid the reader.

             BoneCP groups threads into partitions with each thread having
             a thread-local connection pool.  The default number of
             partitions is 1 and DataNucleus (currently) provides no
             mechanism to configure this. -->

        <!-- datanucleus.connectionPool.maxIdle is BoneCP's setIdleMaxAge:
             the duration (in minutes), for a connection to remain unused
             before it is closed.  The default value is 60 and BoneCP JavaDoc
             includes the comment: "Do not use aggressive values here!"

             NB #1: DataNucleus uses BoneCP's setIdleMaxAge method, which is
                    deprecated.  The correct method is setIdleMaxAgeInMinutes.
                    Because of this, BoneCP emits a warning message in the
                    log file:
                        Please use setIdleMaxAgeInMinutes in place of
                        setIdleMaxAge. This method has been deprecated.

             NB #2: Previous code used the value of the dCache property
                    maxIdleJdbcConnections; however, this is inappropriate as
                    this property counts connections, rather than providing
                    a duration. This inconsistency is likely a bug in
                    DataNucleus.

             For these reasons, we leave maxIdle property undefined and
             accept the default value of 1 hour

        <prop key="datanucleus.connectionPool.maxIdle">${maxIdleJdbcConnections}</prop>
        -->

        <!-- datanucleus.connectionPool.minIdle is currently ignored by
             DataNucleus' BoneCP support
        <prop key="datanucleus.connectionPool.minIdle">2</prop>
        -->

        <!-- datanucleus.connectionPool.minActive is currently ignored by
             DataNucleus' BoneCP support
        <prop key="datanucleus.connectionPool.minActive">${maxActiveJdbcConnections}</prop>
        -->

        <!-- datanucleus.connectionPool.maxWait is currently ignored by
             DataNucleus' BoneCP support
        <prop key="datanucleus.connectionPool.maxWait">#{ ${maxJdbcConnectionsWaitSec} * 1000 }</prop>
        -->

        <!-- BoneCP setMaxConnectionsPerPartition: maximum number of
             connections (per partition) -->
        <prop key="datanucleus.connectionPool.maxPoolSize">${maxActiveJdbcConnections}</prop>

        <!-- BoneCP setMinConnectionsPerPartition: the minimum number of
             connections that will be contained in every partition -->
        <prop key="datanucleus.connectionPool.minPoolSize">2</prop>

        <!-- BoneCP setStatementsCacheSize: the number of statements to
             cache -->
        <prop key="datanucleus.connectionPool.maxStatements">100</prop>

        <prop key="datanucleus.cache.level2.type">none</prop>
      </props>
    </property>
  </bean>

  <bean id="tx-manager" class="org.springframework.orm.jdo.JdoTransactionManager">
    <description>JDO transaction manager</description>
    <property name="persistenceManagerFactory" ref="pmf"/>
    <property name="jdoDialect">
        <bean class="org.dcache.util.Jdo3Dialect"/>
    </property>
  </bean>

  <bean id="pmf-proxy"
      class="org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy">
    <description>Transaction aware JDO connection</description>
    <property name="targetPersistenceManagerFactory" ref="pmf"/>
    <property name="allowCreate" value="false"/>
  </bean>

  <bean id="dao" class="org.dcache.pinmanager.JdoDao">
    <description>Data access object</description>
    <property name="persistenceManagerFactory" ref="pmf-proxy"/>
  </bean>

  <tx:annotation-driven transaction-manager="tx-manager" mode="aspectj"/>
</beans>
