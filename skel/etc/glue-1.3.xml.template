<?xml version="1.0" encoding="utf-8"?>

<!--+
    |   This file defines how an XML file is converted into LDAP,
    |   specifically, how the XML file that describes dCache's current state
    |   is converted into LDAP suitable for Glue v1.3.
    |
    |   Some of the information that Glue requires is independent of dCache;
    |   for example, the site's "Unique ID" is something that a dCache
    |   instance doesn't know.  For this reason, you must configure this
    |   file to include that information.
    |
    |   The general format of this file is described in:
    |
    |       ${ourHomeDir}/share/doc/xylophone/Guide.txt
    |
    |   That document describes the semantics of the XML elements in this
    |   file.  However, the layout of this file is designed so you shouldn't
    |   have to refer to that guide.  Simply edit the configuration as
    |   described in the comment immediately above.
    |
    |   A word of causion: be careful when using characters that are special
    |   in XML.  If you wish to use the less-than (<) or the ampersand (&)
    |   symbols, be sure to write them as &lt; and &amp; respectively.
    +-->


<xylophone>


  <!--+
      |    SINGLE WORDS OR PHRASES THAT DESCRIBE YOUR SITE.
      +-->
  <constants>


    <!--+
        |   GlueSiteUniqueID: a unique reference for your site.  This
        |   must match the GlueSiteUniqueID defined in other services.
        +-->
    <constant id="SITE-UNIQUE-ID">EXAMPLESITE-ID</constant>


    <!--+
        |   GlueSEUniqueID: your dCache's Unique ID.  Currently, this
        |   MUST be the FQDN of your SRM end-point.
        +-->
    <constant id="SE-UNIQUE-ID">dcache-srm.example.org</constant>


    <!--+
        |   GlueSEName: a human understandable name for your SE (it may
        |   contain spaces).  You may leave this empty and a GlueSEName
        |   will not be published.
        +-->
    <constant id="SE-NAME"></constant>


    <!--+
        |   GlueSEStatus: current status of dCache.  This should be one
        |   of the following values:
        |
        |      Production    the SE processes old and new requests
        |                    according to its policies,
        |
        |      Queuing       the SE can accept new requests, but they
        |                    will be kept on hold,
        |
        |      Closed        the SE does not accept new requests and
        |                    does not process old requests,
        |
        |      Draining      the SE does not accept new request but
        |                    still processes old requests.
        |
        |   The default value "UNDEFINEDVALUE" is not valid, so must be
        |   changed.  In practice, most sites will use Production all the
        |   time.
        +-->
    <constant id="DCACHE-STATUS">UNDEFINEDVALUE</constant>


    <!--+
        |   GLUE2.0: "Maturity of the service in terms of quality of
        |             the software components"
        |
        |   This should be one of the following values (case is
        |   significant)
        |
        |      development    The component is under active development
        |                     both in functionalities and interfaces.
        |
        |      testing        The component has completed the development
        |                     phase and is under testing.
        |
        |      pre-production The component has completed the development
        |                     and passed the testing phase; it is being
        |                     used in real world scenarios
        |
        |      production     The component has completed the development
        |                     and is considered stable for real world
        |                     scenarios
        +-->
    <constant id="DCACHE-QUALITY-LEVEL">UNDEFINEDVALUE</constant>


    <!--+
        |   GlueSEArchitecture: the architecture of the underlying
        |   storage dCache is using.  This should be one of the
        |   following values:
        |
        |      disk          non-robust, single-disk storage,
        |
        |      multidisk     disk-based storage that is robust against
        |                    single disk failures,
        |
        |      tape          dCache has access to an HSM system.
        |
        |      other         reserved for other technologies, although setting
        |                    this value is unlikely to be correct.
        |
        |   The default value "UNDEFINEDVALUE" is not valid, so must be
        |   changed.  In practice, most sites without HSM connectivity will
        |   use RAID disk pools, so "multidisk" is appropriate.  Those with
        |   an attached HSM should use "tape".
        +-->
    <constant id="DCACHE-ARCHITECTURE">UNDEFINEDVALUE</constant>


    <!--+
        |  A site will typically have multiple resource-level BDIIs,
        |  a single site-level BDII and zero or more top-level BDIIs.
        |  The site-level BDII is periodically updated with information
        |  from the various resource-level BDII.
        |
        |  Most sites will deploy a resource-level BDII for each dCache
        |  instance.  The output from running the info provider script
        |  is injected into this BDII.  If the BDII is on a dCache head
        |  node then the BDII is very likely a resource-level BDII.  This
        |  is the default for YAIM based installations.
        |
        |  It is also possible to inject information directly into the
        |  site-level BDII.  This removes the need to have a resource-level
        |  BDII; however, the site-level BDII requires LDIF that has a
        |  slightly different structure.
        |
        |  If the LDIF output is for a resource-level BDII then the
        |  DIT-PARENT constant below should have the value: resource.
        |  If the LDIF output is for a site-level BDII then it should
        |  have the same value as the SITE-UNIQUE-ID constant above.
        |
        |  If you are unsure, leave this as "resource"
        +-->
    <constant id="DIT-PARENT">resource</constant>
  </constants>


  <!--+
      |    LISTS OF ITEMS THAT DESCRIBE YOUR SITE.
      +-->
  <lists>

    <!--+
        |    When publishing the SRM interface, we list the supported VOs.
        |    You should record this list here.  For example:
        |
        |        <list name="SRM-supported-VOs">
        |          <item>atlas</item>
        |          <item>lhcb</item>
        |          <item>dteam</item>
        |          <item>ops</item>
        |        </list>
        +-->
    <list name="SRM-supported-VOs">
    </list>


    <!--+
        |   GlueServiceOwner: when publishing an SRM interface as a
        |   GlueService, we may specify any number of "owners" for
        |   this service.  Just add an item element inside the list
        |   element for each owner.  For example:
        |
        |       <list name="SRM-GlueServiceOwners">
        |         <item>Institute/University/...</item>
        |         <item>Funding body A</item>
        |         <item>Funding body B</item>
        |       </list>
        |
        |   It's OK to leave this empty and no owners will be published.
        +-->
    <list name="SRM-GlueServiceOwners">
    </list>


    <!--+
        |  The store unit *@* is special.  It's not a wildcard "match-all"
        |  unit but rather a default store unit.  It matches all requests
        |  that have no other store unit matches.  Requests that utilise
        |  some part of the namespace where no store unit is defined will
        |  take the *@* (or "default") store unit.
        |
        |  A site may choose to configure store units for all parts of the
        |  namespace that a VO can access; if so, then that requests from
        |  that VO's members will always have some specific store unit and
        |  will never utilise the *@* default store unit.
        |
        |  If requests from a VO's members may use some part of the namespace
        |  where no store unit is defined then those requests will utilise
        |  the *@* default store unit.
        |
        |  Those VOs whos members can issue requests that attract the
        |  *@* default store unit should be present in the following
        |  list.  Any VO listed in this list must also have a corresponding
        |  entry in the "VO-to-path" mapping below.
        |
        |  Here is an example of the list:
        |
        |       <list name="default-store-unit-VOs">
        |         <item>dteam</item>
        |         <item>ops</item>
        |       </list>
        +-->
    <list name="default-store-unit-VOs">
    </list>
  </lists>



  <!--+
      |    MAPPINGS FROM ONE STRING TO ANOTHER.
      +-->
  <mapping>

    <!--+
        |   This describes how to map dCache's store units to their
        |   corresponding VO.  It is used to publish VO names when some
        |   dCache storage is accessible (for reading, writing, staging,
        |   or any combination thereof).
        |
        |   If you wish to avoid publishing a VO for a particular store
        |   unit then use an empty string ("") for the replace-with value.
        |
        |   Here is an example.  Note that no VO information will be
        |   published for store unit local-users:default@osm
        |
        |   <map name="unit-to-VO">
        |     <sub match="atlas:default@osm"        replace-with="atlas"/>
        |     <sub match="ops:default@osm"          replace-with="ops"/>
        |     <sub match="alice:disk@osm"           replace-with="alice"/>
        |     <sub match="alice:tape@osm"           replace-with="alice"/>
        |     <sub match="local-users:default@osm"  replace-with=""/>
        |     <default value="UNDEFINEDVO"/>
        |   </map>
        |
        |   It is recommended to keep the default value as "UNDEFINEDVO" so
        |   misconfigurations are easy to identify.
        +-->
    <map name="unit-to-VO">
      <default value="UNDEFINEDVO"/>
    </map>


    <!--+
        |   The unit-to-path map describes how to map store units to the
        |   base path that clients should used when writing into dCache.
        |   It is used when publishing the Installed Capacity information.
        |
        |   In general, the value should be the top-most directory that
        |   has the store unit tags defined; however, there may be
        |   circumstances where it makes more sense to publish a different
        |   directory.
        |
        |   Here is an example:
        |
        |   <map name="unit-to-path">
        |     <sub match="atlas:default@osm"
        |          replace-with="/pnfs/example.org/data/atlas"/>
        |     <sub match="ops:default@osm"
        |          replace-with="/pnfs/example.org/data/ops"/>
        |     <sub match="alice:disk@osm"
        |          replace-with="/pnfs/example.org/data/alice/disk"/>
        |     <sub match="alice:tape@osm"
        |          replace-with="/pnfs/example.org/data/alice/tape"/>
        |     <default value="/UNDEFINEDPATH"/>
        |   </map>
        |
        |   It is recommended to keep the default value as "/UNDEFINEDPATH"
        |   so misconfigurations are easy to identify.
        +-->
    <map name="unit-to-path">
      <default value="/UNDEFINEDPATH"/>
    </map>


    <!--+
        |  Map the named VO to the corresponding path.
        |
        |  This mapping is used when publishing a group of SRM reservations
        |  with the same SRM space description.  This grouping is done
        |  per VO, so each such reservation-group has a corresponding
        |  single VO.
        |
        |  When publishing an SRM reservation-group, we are required to
        |  publish a corresponding path.  This may be used by the SRM client
        |  to build a path into which they may write.
        |
        |  Here is an example:
        |
        |  <map name="VO-to-path">
        |    <sub match="ops"
        |         replace-with="/pnfs/example.org/data/ops"/>
        |    <sub match="atlas"
        |         replace-with="/pnfs/example.org/data/atlas"/>
        |    <default value="/UNDEFINEDPATH"/>
        |  </map>
        |
        |   It is recommended to keep the default value as "/UNDEFINEDPATH"
        |   so misconfigurations are easy to identify.
        +-->
    <map name="VO-to-path">
      <default value="/UNDEFINEDPATH"/>
    </map>


    <!--+
        |  Offline disk storage accounting.
        |
        |  The Installed Capacity of WLCG allows for a site to publish
        |  information about storage that is somehow allocated but not
        |  actually available for immediate use.  Examples where this might
        |  be used include:
        |
        |    o  if hardware has been purchased but not yet commissioned,
        |
        |    o  if pools are offline for any extended period (e.g., hardware
        |       is being repared) and dCache is then unaware of the pools.
        |
        |  Such capacity is unknown to dCache, so must be accounted for
        |  manually.  This is done with the following map.
        |
        |  Such space is accounted for against some specific VO.  To avoid
        |  configuring yet another list, the list of candidate VOs is taken
        |  from SRM-supported-VOs (see above).  Therefore, to publish
        |  offline storage allocated for some VO, that must be listed in
        |  SRM-supported-VOs.
        |
        |  To publish offline storage for a VO, the VO-to-offline-disk map
        |  should convert the VO name to the corresponding number of bytes
        |  of offline storage.  The following example shows how to define that
        |  100 TiB of offline storage is for the Atlas VO.
        |
        |  <map name="VO-to-offline-disk">
        |    <sub match="atlas" replace-with="109951162777600"/>
        |    <default value="0"/>
        |  </map>
        |
        |  NOTE 1. the values configured here will inflate the reported
        |          size of the dCache instances "installed capacity".
        |
        |  NOTE 2. be very careful that you do not to leave stale
        |          information here.
        +-->
    <map name="VO-to-offline-disk">
      <default value="0"/>
    </map>

  </mapping>


  <!--+
      |  Location of tape accounting information
      |
      |  The information about a site's tape usage that WLCG would like
      |  published cannot come from dCache, so must be supplied by the
      |  site.
      |
      |  This info-provider expects that this information is in a separate
      |  file.  The anticipation is that the site admin writes a small
      |  script that creates the file with up-to-date information.  A
      |  description of this file's format is in the tape-info-empty.xml
      |  file.
      |
      |  If you are a site with tape storage that is to be published,
      |  change the location below to:
      |
      |    /var/opt/dcache/tape-info.xml
      |
      |  and ensure that that file exists with up-to-date information.
      |
      |  If you are a site without tape storage then do not alter the path.
      +-->
  <locations>
    <location name="tape-info">/opt/d-cache/share/xml/tape-info-empty.xml</location>
  </locations>


  <!--+
      |    YOU SHOULD NOT NEED TO EDIT ANYTHING BELOW THIS POINT.
      +-->


  <!--+
      |   This section describes the LDAP tree structure.  If you wish to
      |   publish additional (hard-coded) attributes, then you may add that
      |   information here.
      +-->
  <publish>
    <object rdn="o" hidden="1">
      <attr name="o">grid</attr>

      <object rdn="mds-vo-name" hidden="1">
        <attr name="mds-vo-name">
          <constant id="DIT-PARENT"/>
        </attr>


        <!-- Publish the Top-level GlueSE object -->

        <object rdn="GlueSEUniqueID"
                classes="GlueSETop GlueSE GlueKey GlueSchemaVersion">

          <!--+
              |    PUBLISH DOORS
              |
              |    We publish one GlueSEAccessProtocol for each
              |    door
              |
              |    GlueSE
              |     |
              |     +- GlueSEAccessProtocol
              |     :
              +-->
          <object rdn="GlueSEAccessProtocolLocalID"
                  select="/d:dCache/d:doors/d:door"
                  classes="GlueSETop GlueSEAccessProtocol GlueKey GlueSchemaVersion">
            <!-- Never publish SRM here -->
            <suppress test="SRM">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </suppress>

            <!-- Don't publish any dcap doors -->
            <suppress test="dcap">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </suppress>

            <!-- Don't publish any xrootd doors -->
            <suppress test="Xrootd">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </suppress>

            <!-- Uncomment the next section to suppress publishing gsidcap -->
<!--
            <suppress test="gsidcap">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </suppress>
-->

            <attr name="GlueChunkKey">
              <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
            </attr>
          </object>


          <!--+
              |    PUBLISH SRM AS GlueSEControlProtocol
              |
              |    We must also publish the SRM as a GlueService.  This
              |    happens further down.
              |
              |    GlueSE
              |     |
              |     +- GlueSEControlProtocol
              |     :
              +-->
          <object rdn="GlueSEControlProtocolLocalID"
                  select="/d:dCache/d:doors/d:door"
                  select-mode="default-suppress"
                  classes="GlueSETop GlueSEControlProtocol GlueKey GlueSchemaVersion">
            <!-- Only publish the SRM door here -->
            <allow test="SRM">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </allow>

            <attr name="GlueChunkKey">
              <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
            </attr>
          </object>



          <!--+
              |    PUBLISH SPACE RESERVATIONS (a.k.a space tokens)
              |
              |    We publish one GlueSA and one VOInfo for each
              |    SRM space description.
              |
              |    GlueSE
              |     |
              |     +- GlueSA        |
              |     |   |            |- Repeated for each space
              |     |   +- VOInfo    |  description.
              |     :
              +-->
          <object rdn="GlueSALocalID"
                  select="/d:dCache/d:summary/d:reservations/d:by-VO/d:VO/d:by-description/d:reservation-group"
                  classes="GlueSATop GlueSA GlueSAAccessControlBase GlueSchemaVersion GlueKey">

            <!-- Suppress publishing reservations without a description -->
            <suppress test="" check="is">
              <lookup path="@description"/>
            </suppress>

            <!-- Publish the single VOInfo object for this reservation -->
            <object rdn="GlueVOInfoLocalID"
                    classes="GlueVOInfo GlueSchemaVersion GlueKey">

              <attr name="GlueVOInfoLocalID">
                <lookup path="d:metric[@name='vo']"/>
              </attr>

              <attr name="GlueVOInfoName">Information about <lookup
                  path="@description"/> for VO <lookup
                  path="d:metric[@name='vo']"/>
              </attr>

              <attr name="GlueVOInfoTag"><lookup path="@description"/></attr>

              <attr name="GlueVOInfoAccessControlBaseRule">VO:<lookup
                  path="d:metric[@name='vo']"/>
              </attr>

              <attr name="GlueVOInfoPath">
                <map name="VO-to-path">
                  <lookup path="d:metric[@name='vo']"/>
                </map>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSALocalID" use="rdn"/>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
              </attr>
            </object>

            <attr name="GlueSALocalID">
              <lookup path="d:metric[@name='vo']"/>:<lookup
                  path="@description"/>
            </attr>

            <attr name="GlueSAName">SRM reservations with description [<lookup
                path="@description"/>] made for VO <lookup
                path="d:metric[@name='vo']"/>
            </attr>

            <!-- HACK: when publishing GlueSAAccessLatency and
                 GlueSARetentionPolicy attributes, we use the values from
                 the first reservation (in XML document order).  There is
                 currently no guarantee that all reservations with the same
                 description and for the same VO will have the same
                 AL & RP, but common usage means having mismatching AL & RP
                 values is unlikely.  The correct solution is to fix the
                 dCache info service to group on AL & RP too. -->

            <attr name="GlueSAAccessLatency">
              <map name="dCache-ALRP-values-to-Glue">
                <lookup child="path">/d:dCache/d:reservations/d:reservation[@reservation-id='<lookup
                  path="d:reservations/d:reservation[1]/@id"/>']/d:metric[@name='access-latency']</lookup>
              </map>
            </attr>

            <attr name="GlueSARetentionPolicy">
              <map name="dCache-ALRP-values-to-Glue">
                <lookup child="path">/d:dCache/d:reservations/d:reservation[@reservation-id='<lookup
                  path="d:reservations/d:reservation[1]/@id"/>']/d:metric[@name='retention-policy']</lookup>
              </map>
            </attr>

            <attr name="GlueSAAccessControlBaseRule">VO:<lookup
                  path="d:metric[@name='vo']"/>
            </attr>

            <!-- Publish the total size of the space as the ReservedOnlineSize -->
            <attr name="GlueSAReservedOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup default="0"
                        child="path">d:space/d:metric[@name='total']</lookup>
              </scale>
            </attr>

            <attr name="GlueSATotalOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup default="0"
                        child="path">d:space/d:metric[@name='total']</lookup>
              </scale>
            </attr>

            <!-- Publish UsedOnlineSize as Allocated + Used: we include the
                 space needed for currently ongoing transfers -->
            <attr name="GlueSAUsedOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='allocated']</lookup>
                  </term>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='used']</lookup>
                  </term>
                </sum>
              </scale>
            </attr>

            <attr name="GlueSAFreeOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup default="0"
                        child="path">d:space/d:metric[@name='free']</lookup>
              </scale>
            </attr>

            <!-- We are required to publish these attributes -->
            <attr name="GlueSAReservedNearlineSize">0</attr>
            <attr name="GlueSATotalNearlineSize">0</attr>
            <attr name="GlueSAUsedNearlineSize">0</attr>
            <attr name="GlueSAFreeNearlineSize">0</attr>

            <!-- We hard-code 0 to avoid SRM reservations from being
                 included in any accounting -->
            <attr name="GlueSACapability">InstalledOnlineCapacity=0</attr>
            <attr name="GlueSACapability">InstalledNearlineCapacity=0</attr>

            <!-- We also mark that this is a SRM reservation.  This may be
                 useful information-->
            <attr name="GlueSACapability">dCacheUsage=SRM-reservation-group</attr>

            <attr name="GlueChunkKey"><parent-rdn rdn="GlueSEUniqueID" use="rdn"/></attr>
          </object>



          <!--+
              |    PUBLISH THE INSTALLED CAPACITY INFORMATION
              |
              |    dCache storage is split into non-overlapping sets of
              |    pools that have consistent accessibility for VOs:
              |    the Normalised Access Space (NAS).
              |
              |    We publish one GlueSA object for each NAS and zero or
              |    more VOInfo objects for each store unit that can write
              |    into these pools.  For simplicity, we assume that
              |    sites are configured so that each store unit is to be
              |    used by only one specific VO.
              |
              |    GlueSE
              |     |
              |     +- GlueSA     |- The GlueSA for some NAS.
              |     |   |
              |     |   +- VOInfo    |
              |     |   |            |- Zero or more VOInfo objects.
              |     |   +- VOInfo    |
              |     |   :            |
              |     |   +- VOInfo    |
              |     :
              +-->
          <object rdn="GlueSALocalID"
                  select="/d:dCache/d:nas/d:nas"
                  classes="GlueSATop GlueSA GlueSAAccessControlBase GlueSAState GlueSchemaVersion GlueKey">

            <!-- Publish a VOInfo object for write units -->
            <object rdn="GlueVOInfoLocalID"
                    select="d:units/d:store/d:write/d:unitref"
                    classes="GlueVOInfo GlueSchemaVersion GlueKey">

              <!-- Avoid publishing anything that doesn't have a path -->
              <suppress test="" check="is">
                <map name="unit-to-path">
                  <lookup path="@name"/>
                </map>
              </suppress>

              <!-- Don't publish the default store-units here -->
              <suppress test="*@*" check="is">
                <lookup path="@name"/>
              </suppress>

              <!-- Avoid publishing anything that doesn't have a VO -->
              <suppress test="" check="is">
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>

              <!-- Ensure the combination of VO and path is unique -->
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
                <map name="unit-to-path">
                  <lookup path="@name"/>
                </map>
              </unique>

              <attr name="GlueVOInfoLocalID">store-unit-<lookup path="@name"/>
              </attr>

              <attr name="GlueVOInfoPath">
                <map name="unit-to-path">
                  <lookup path="@name"/>
                </map>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSALocalID" use="rdn"/>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
              </attr>

              <attr name="GlueVOInfoAccessControlBaseRule">VO:<map
                       name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </attr>
            </object>


            <!-- Publish a VOInfo object for VOs in default store units -->
            <object rdn="GlueVOInfoLocalID"
                    list="default-store-unit-VOs"
                    classes="GlueVOInfo GlueSchemaVersion GlueKey">

              <!-- Suppress publishing if *@* cannot write -->
              <suppress test="">
                <lookup path="d:units/d:store/d:write/d:unitref[@name='*@*']/@name"/>
              </suppress>

              <attr name="GlueVOInfoLocalID">default-store-<item/></attr>

              <attr name="GlueVOInfoPath">
                <map name="VO-to-path">
                  <item/>
                </map>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSALocalID" use="rdn"/>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
              </attr>

              <attr name="GlueVOInfoAccessControlBaseRule">VO:<item/></attr>
            </object>


            <attr name="GlueSALocalID">nas-<map name="GlueSALocalID-BDII-workaround">
                <lookup path="@id"/>
              </map>
            </attr>

            <attr name="GlueSAName">Storage accessible via <lookup
                path="@id"/>
            </attr>


            <!-- Publish those VOs that can write.  These will be repeated in VOInfo
                 object(s) -->
            <attr name="GlueSAAccessControlBaseRule"
                  select="d:units/d:store/d:write/d:unitref">VO:<map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>

            <!-- Publish those VOs that can read -->
            <attr name="GlueSAAccessControlBaseRule"
                  select="d:units/d:store/d:read/d:unitref">VO:<map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>

            <!-- Publish those VOs that can stage from tape -->
            <attr name="GlueSAAccessControlBaseRule"
                  select="d:units/d:store/d:stage/d:unitref">VO:<map
                      name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>

            <!-- publish *@* VOs, if appropriate -->
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:read/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:write/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:stage/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>


            <!-- We repeat publishing the access rules with the deprecated
                 format as a work-around for a bug present in:
                   lcg-infosites:
                     https://savannah.cern.ch/bugs/?57787
                   SAM:
                     https://savannah.cern.ch/bugs/?57919
                  -->
            <attr name="GlueSAAccessControlBaseRule"
                  not-empty="1"
                  select="d:units/d:store/d:write/d:unitref"><map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  not-empty="1"
                  select="d:units/d:store/d:read/d:unitref"><map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  not-empty="1"
                  select="d:units/d:store/d:stage/d:unitref"><map
                      name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>

            <!-- Again, publish the *@* VOs separately, if appropriate, but this
                 time without the "VO:" prefix -->
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">
              <item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:read/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">
              <item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:write/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>
            <attr name="GlueSAAccessControlBaseRule"
                  list="default-store-unit-VOs">
              <item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:stage/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>

            <!-- Publish a hard-coded ReservedOnlineSize of zero since
                 this is a "Storage Area representing an unreserved
                 space." (from WLCG Installed Capacity document) -->
            <attr name="GlueSAReservedOnlineSize">0</attr>

            <attr name="GlueSATotalOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup default="0"
                        child="path">d:space/d:metric[@name='total']</lookup>
              </scale>
            </attr>

            <!-- Publish UsedOnlineSize as Total - (Free + Removable) -->
            <attr name="GlueSAUsedOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='total']</lookup>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='free']</lookup>
                    </scale>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='removable']</lookup>
                    </scale>
                  </term>
                </sum>
              </scale>
            </attr>

            <!-- Publish FreeOnlineSize as Free + Removable -->
            <attr name="GlueSAFreeOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='free']</lookup>
                  </term>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='removable']</lookup>
                  </term>
                </sum>
              </scale>
            </attr>

            <!-- We are required to publish these attributes -->
            <attr name="GlueSAReservedNearlineSize">0</attr>
            <attr name="GlueSATotalNearlineSize">0</attr>
            <attr name="GlueSAUsedNearlineSize">0</attr>
            <attr name="GlueSAFreeNearlineSize">0</attr>


            <!--  The StorageAreaState attributes (GlueSAStateAvailableSpace
                  and GlueSAStateUsedSpace) are both marked as deprecated in
                  Glue v1.3.  They have been superseded by the eight
                  GlueSA*Size attributes.

                  Unfortunately, various tools continue to use this attribute
                    lcg-infosites:
                      https://savannah.cern.ch/bugs/?57799
                    SAM:
                      https://savannah.cern.ch/bugs/?57918

                  As a work-around, we publish GlueSAStateAvailableSpace
                  and GlueSAStateUsedSpace -->

            <!-- Publish State.UsedSpace as Total - (Free + Removable),
                 in kiloBytes -->
            <attr name="GlueSAStateUsedSpace">
              <scale to-integer="round" factor="bytes-to-kilobytes">
                <sum>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='total']</lookup>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='free']</lookup>
                    </scale>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='removable']</lookup>
                    </scale>
                  </term>
                </sum>
              </scale>
            </attr>

            <!-- Publish State.AvailableSpace as Free + Removable,
                 in kiloBytes -->
            <attr name="GlueSAStateAvailableSpace">
              <scale to-integer="round" factor="bytes-to-kilobytes">
                <sum>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='free']</lookup>
                  </term>
                  <term>
                    <lookup default="0"
                            child="path">d:space/d:metric[@name='removable']</lookup>
                  </term>
                </sum>
              </scale>
            </attr>


            <attr name="GlueSACapability">InstalledOnlineCapacity=<scale
                  to-integer="round"
                  factor="bytes-to-gigabytes">
                <lookup default="0"
                        child="path">d:space/d:metric[@name='total']</lookup>
              </scale>
            </attr>

            <attr name="GlueSACapability">InstalledNearlineCapacity=0</attr>

            <!-- Publish some dCache-specific information -->
            <attr select="d:units/d:store/d:stage/d:unitref"
                  name="GlueSACapability">dCacheCanStage=VO:<map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>
            <attr name="GlueSACapability"
                  list="default-store-unit-VOs">dCacheCanStage=VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:stage/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>


            <attr select="d:units/d:store/d:read/d:unitref"
                  name="GlueSACapability">dCacheCanRead=VO:<map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>
            <attr name="GlueSACapability"
                  list="default-store-unit-VOs">dCacheCanRead=VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:read/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>

            <attr select="d:units/d:store/d:write/d:unitref"
                  name="GlueSACapability">dCacheCanWrite=VO:<map
                    name="unit-to-VO">
                <lookup path="@name"/>
              </map>
              <!-- Don't publish the default store-unit here -->
              <suppress test="*@*"><lookup path="@name"/></suppress>
              <suppress test=""><map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </suppress>
              <unique>
                <map name="unit-to-VO">
                  <lookup path="@name"/>
                </map>
              </unique>
            </attr>
            <attr name="GlueSACapability"
                  list="default-store-unit-VOs">dCacheCanWrite=VO:<item/>
              <suppress test="">
                <lookup path="d:units/d:store/d:write/d:unitref[@name='*@*']/@name"/>
              </suppress>
            </attr>

            <attr name="GlueChunkKey"><parent-rdn rdn="GlueSEUniqueID" use="rdn"/></attr>
          </object>

          <!--+
              |    PUBLISH NEARLINE STORAGE
              |
              |    We wish to publish tape accounting information.  WLCG
              |    requires that this information take into account tape
              |    compression; therefore, we cannot use any component
              |    within dCache to figure out nearline information.
              |
              |    Published information must come from an external source.
              |    This external source is an XML file tape-info.xml, which
              |    is at a fixed location.  The default contents of this
              |    file will publish no nearline space, but the site-admin
              |    may override the file with the information they wish to
              |    publish.
              |
              |    The file allows publishing of zero or more "collections".
              |    Each collection is published as a GlueSA object.  The
              |    collection may be assigned to one (or more) VOs, which
              |    will be reflected by that GlueSA's ACBR attributes.  The
              |    tapes may be writable by some (usually all) of those VOs
              |    In this case, a VOInfo object is created that describes
              |    how to write into that particular collection.
              |
              |    GlueSE
              |     :
              |     +- GlueSA     |- Repeated for each collection.
              |     |   :
              |     |   +- VOInfo  |- Repeated for each VO mentioned within
              |     |              |  the collection's write-path element
              |     :
              +-->
          <object rdn="GlueSALocalID"
                  xml-src="tape-info"
                  select="/tape-info/collection"
                  classes="GlueSATop GlueSA GlueSAAccessControlBase GlueSAState GlueSchemaVersion GlueKey">

            <!-- Publish a VOInfo object for each vo in write-paths -->
            <object rdn="GlueVOInfoLocalID"
                    xml-src="tape-info"
                    select="write-paths/vo"
                    classes="GlueVOInfo GlueSchemaVersion GlueKey">
              <attr name="GlueVOInfoLocalID">
                <lookup xml-src="tape-info"
                        path="@name"/>
              </attr>

              <attr name="GlueVOInfoPath">
                <lookup xml-src="tape-info"
                        path="."/>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSALocalID" use="rdn"/>
              </attr>

              <attr name="GlueChunkKey">
                <parent-rdn rdn="GlueSEUniqueID" use="rdn"/>
              </attr>

              <attr name="GlueVOInfoAccessControlBaseRule">VO:<lookup
                        xml-src="tape-info"
                        path="@name"/></attr>
            </object>

            <attr name="GlueSALocalID">tape-<lookup xml-src="tape-info"
                                               path="@id"/></attr>

            <attr name="GlueSAName"
                  not-empty="1"><lookup xml-src="tape-info"
                                        path="name"/></attr>

            <attr name="GlueSAReservedNearlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup xml-src="tape-info"
                        default="0"
                        path="space/reserved"/>
              </scale>
            </attr>

            <attr name="GlueSATotalNearlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup xml-src="tape-info"
                        default="0"
                        path="space/total"/>
              </scale>
            </attr>

            <attr name="GlueSAUsedNearlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <lookup default="0"
                        xml-src="tape-info"
                        path="space/used"/>
              </scale>
            </attr>

            <attr name="GlueSAFreeNearlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup xml-src="tape-info"
                            default="0"
                            path="space/total"/>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              xml-src="tape-info"
                              path="space/used"/>
                    </scale>
                  </term>
                </sum>
              </scale>
            </attr>

            <attr name="GlueSAReservedOnlineSize">0</attr>
            <attr name="GlueSATotalOnlineSize">0</attr>
            <attr name="GlueSAUsedOnlineSize">0</attr>
            <attr name="GlueSAFreeOnlineSize">0</attr>

            <attr name="GlueSAAccessControlBaseRule"
                  xml-src="tape-info"
                  select="for/vo">VO:<lookup xml-src="tape-info"
                                             path="."/></attr>

            <attr name="GlueSACapability">InstalledOnlineCapacity=0</attr>
            <attr name="GlueSACapability">InstalledNearlineCapacity=<scale
                    to-integer="round"
                    factor="bytes-to-gigabytes">
                <lookup xml-src="tape-info"
                        default="0"
                        path="space/reserved"/>
              </scale>
            </attr>

            <attr name="GlueChunkKey"><parent-rdn rdn="GlueSEUniqueID" use="rdn"/></attr>
          </object>


          <!--+
              |    PUBLISH OFFLINE DISK STORAGE
              |
              |    WLCG allows for publishing storage that is part of a
              |    storage element but that, for whatever reason, is not
              |    accessible.  This might include pools that are not yet
              |    commissioned.
              |
              |    The intention is to allow GlueSAReservedOnlineSize to carry
              |    this information.  Its value should be the sum of
              |    GlueSATotalOnlineSize and whatever is currently offline.
              |    So, if all storage in a GlueSA is currently available,
              |    GlueSAReservedOnlineSize == GlueSATotalOnlineSize.
              |
              |    However, if a GlueSA represents "unreserved" capacity then
              |    GlueSAReservedOnlineSize must be zero: the attribute can
              |    only be non-zero if the GlueSA represents capacity
              |    "reserved" for a VO.  This most likely means SRM space
              |    reservations.  Since SRM reservations have late binding
              |    in dCache, we can't publish offline storage against some
              |    existing SRM reservation.
              |
              |    So, we take use another tactic: we publish new GlueSA
              |    objects.  These will hold information about only the offline
              |    data, but are (nominally) assigned to a VO using an
              |    ACBR attribute.  We leave out the VOInfo object so not
              |    to confuse broken clients that don't check the GlueSA
              |    GlueSATotalOnlineSize.
              |
              |    GlueSE
              |     :
              |     +- GlueSA      |- Repeated for each VO with offline storage
              |     :
              +-->
          <object rdn="GlueSALocalID"
                  list="SRM-supported-VOs"
                  classes="GlueSATop GlueSA GlueSAAccessControlBase GlueSchemaVersion GlueKey">

            <!-- Suppress publishing any object if there's no map entry -->
            <suppress test="0"
                      check="equal">
              <map name="VO-to-offline-disk">
                <item/>
              </map>
            </suppress>

            <attr name="GlueSALocalID">OL-<item/></attr>
            <attr name="GlueSAName">Offline storage for VO <item/></attr>

            <attr name="GlueSAAccessControlBaseRule">VO:<item/></attr>

            <attr name="GlueSAReservedOnlineSize">
              <scale to-integer="round"
                     factor="bytes-to-gigabytes">
                <map name="VO-to-offline-disk">
                  <item/>
                </map>
              </scale>
            </attr>

            <attr name="GlueSATotalOnlineSize">0</attr>
            <attr name="GlueSAUsedOnlineSize">0</attr>
            <attr name="GlueSAFreeOnlineSize">0</attr>

            <!-- We are required to publish these attributes -->
            <attr name="GlueSAReservedNearlineSize">0</attr>
            <attr name="GlueSATotalNearlineSize">0</attr>
            <attr name="GlueSAUsedNearlineSize">0</attr>
            <attr name="GlueSAFreeNearlineSize">0</attr>

            <attr name="GlueSACapability">InstalledOnlineCapacity=<scale
                    to-integer="round" factor="bytes-to-gigabytes">
                <map name="VO-to-offline-disk">
                  <item/>
                </map>
              </scale>
            </attr>

            <attr name="GlueSACapability">InstalledNearlineCapacity=0</attr>
          </object>

          <attr name="GlueChunkKey"><parent-rdn rdn="GlueSEUniqueID" use="rdn"/></attr>
        </object>


        <!--+
            |   PUBLISH SRM AS GlueService
            |
            |   We must publish the SRM as a GlueService.  We also
            |   publish it as a GlueSEControlProtocol further up.
            |
            |    GlueSite
            |     |
            |     +- GlueSE
            |     |   |
            |     |   +- GlueControlProtocol
            |     |
            |     +- GlueService
            |
            +-->
        <object rdn="GlueServiceUniqueID"
                select="/d:dCache/d:doors/d:door"
                select-mode="default-suppress"
                classes="GlueTop GlueKey GlueSchemaVersion GlueService">

          <!-- Publish only SRM door here -->
          <allow test="SRM">
            <lookup path="d:protocol/d:metric[@name='family']"/>
          </allow>


          <!-- The GlueService's UniqueID MUST be the URI of the end-point.
               This is acknowledged as a broken requirement, but it
               persists.  To support DNS aliases we may need to
               publish something other than the self-discovered (public)
               FQDN of the interface.  Currently, the SE-UNIQUE-ID
               MUST be the SRM's FQDN.  We use this here to support
               aliases  -->
          <attr name="GlueServiceUniqueID">httpg://<constant
              id="SE-UNIQUE-ID"/>:<lookup
              path="d:metric[@name='port']"/>/srm/managerv2</attr>

          <!-- GlueServiceName is a human-readable string -->
          <attr name="GlueServiceName">SRM endpoint for <constant
              id="SITE-UNIQUE-ID"/>
          </attr>

          <!-- Some hard-coded values -->
          <attr name="GlueServiceType">SRM</attr>
          <attr name="GlueServiceVersion">2.2.0</attr>

          <!-- as above, we use the fact that the SRM FQDN must be
               the SRM FQDN to support DNS aliases -->
          <attr name="GlueServiceEndpoint">httpg://<constant
            id="SE-UNIQUE-ID"/>:<lookup
            path="d:metric[@name='port']"/>/srm/managerv2</attr>

          <!-- When should we publish something other than "OK" ? -->
          <attr name="GlueServiceStatus">OK</attr>
          <attr name="GlueServiceStatusInfo">No Problems</attr>

          <attr list="SRM-GlueServiceOwners"
                name="GlueServiceOwner">
            <item/>
          </attr>

          <!-- Report the start time of the corresponding cell -->
          <attr name="GlueServiceStartTime">
            <lookup default="1970-01-01T00:00:00Z"
                    child="path">/d:dCache/d:domains/d:domain[@name='<lookup
                    path="d:metric[@name='domain']"/>']/d:cells/d:cell[@name='<lookup
                    path="d:metric[@name='cell']"/>']/d:created/d:metric[@name='ISO-8601']</lookup>
          </attr>

          <!-- Our list of supported VOs -->
          <attr name="GlueServiceAccessControlBaseRule"
                list="SRM-supported-VOs">VO:<item/></attr>


          <!-- FTS ignores GlueServiceAccessControlBaseRule attributes.
               This bug is described here:

                   https://savannah.cern.ch/bugs/?57827

               The work-around is to publish the values as
               GlueServiceAccessControlRule attributes.  This attribute
               is not documented *at all* in Glue v1.3 and is marked
               deprecated in the LDAP schema (it's a hang-over from pre-
               glue v1.2 days, circa 2004!) -->
          <attr name="GlueServiceAccessControlRule"
                list="SRM-supported-VOs"><item/></attr>

          <attr name="GlueForeignKey">
            <other-rdn rdn="GlueSiteUniqueID">
              <constant id="SITE-UNIQUE-ID"/>
            </other-rdn>
          </attr>
        </object>

      </object>
    </object>


    <!--+
        |  Publishing information for GLUE 2.0.
        |
        |  The following contains information about dCache published so it
        |  conforms with the GLUE v2.0 information model's LDAP rendition.
        |  Details about the GLUE 2.0 information model are available here:
        |
        |      http://www.ogf.org/documents/GFD.147.pdf
        |
        |  and those for the LDAP binding are here:
        |
        |      http://forge.gridforum.org/sf/go/doc15518
        |
        |  The GLUE 2 LDAP binding is largely DIT (Directory Information Tree)
        |  independent.  The DIT is the tree of objects stored in an LDAP
        |  server, based on their Distinguished Names (DNs).  However, objects
        |  "which represent components of the corresponding Service MUST be placed
        |  in the subtree below the GLUE2Service object."
        |
        |  Overall, the DIT layout is:
        |
        |  GLUE2StorageService
        |   |
        |   +- GLUE2StorageManager
        |   |   |
        |   |   +- GLUE2DataStore
        |   |
        |   +- GLUE2StorageServiceCapacity (multiple, when site has tape)
        |   |
        |   +- GLUE2StorageAccessProtocol (multiple)
        |   |
        |   +- GLUE2StorageEndpoint   -.
        |   |   |                      | (multiple)
        |   |   +- GLUE2AccessPolicy  -'
        |   |
        |   +- GLUE2StorageShare            -.
        |       |                            |
        |       +- GLUE2StorageShareCapacity | (multiple)
        |       |                            |
        |       +- GLUE2MappingPolicy       -'
        |
        |  A summary of each class is given before that's class' first use,
        |  along with a diagram showing the immediate child classes.
        +-->

    <object rdn="o" hidden="1">
      <attr name="o">glue</attr>

      <object rdn="GLUE2GroupID" hidden="1">
        <attr name="GLUE2GroupID">resource</attr>

        <!--+
            |  GLUE2StorageService
            |
            |  This represents the aggregation of storage capacity, data
            |  access and software components.
            |
            |  GLUE2StorageService
            |   |
            |   +- GLUE2StorageManager
            |   |
            |   +- GLUE2StorageServiceCapacity
            |   |
            |   +- GLUE2StorageAccessProtocol (multiple)
            |   |
            |   +- GLUE2StorageEndpoint (multiple)
            |   |
            |   +- GLUE2StorageShare (multiple)
            +-->
        <object rdn="GLUE2ServiceID"
                classes="GLUE2StorageService GLUE2Service">

          <attr name="GLUE2ServiceID">glue:<constant id="SE-UNIQUE-ID"/>/data</attr>

          <attr name="GLUE2EntityName"
                not-empty="1"><constant id="SE-NAME"/></attr>

          <attr name="GLUE2ServiceType">org.dcache.storage</attr>
          <attr name="GLUE2ServiceQualityLevel"><constant id="DCACHE-QUALITY-LEVEL"/></attr>
          <attr name="GLUE2ServiceCapability">data.access.flatfiles</attr>
          <attr name="GLUE2ServiceCapability">data.management.storage</attr>
          <attr name="GLUE2ServiceCapability">data.management.transfer</attr>
          <attr name="GLUE2ServiceCapability">data.transfer</attr>
          <attr name="GLUE2ServiceCapability">security.delegation</attr>
          <attr name="GLUE2ServiceAdminDomainForeignKey"><constant id="SITE-UNIQUE-ID"/></attr>


          <!--+
              |  GLUE2StorageManager
              |
              |  Represents software that manages some storage
              |  resources.  For us, this is dCache.
              |
              |  GLUE2StorageService
              |   |
              |   +- GLUE2StorageManager
              |   :   |
              |       +- GLUE2DataStore
              +-->
          <object rdn="GLUE2ManagerID"
                  classes="GLUE2StorageManager GLUE2Manager">

            <attr name="GLUE2ManagerID">glue:<const id="SE-UNIQUE-ID"/>/data/m/dCache</attr>

            <attr name="GLUE2StorageManagerStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr not-empty="1"
                  name="GLUE2EntityName"><constant id="SE-NAME"/></attr>

            <attr name="GLUE2ManagerProductName">dCache</attr>
            <attr name="GLUE2ManagerProductVersion">
              <map name="cell-version-to-dcache-version">
                <lookup default="UNDEFINEDVALUE"
                        path="/d:dCache/d:domains/d:domain[@name='dCacheDomain']/d:cells/d:cell[@name='PoolManager']/d:version/d:metric[@name='release']"/>
              </map>
            </attr>

            <attr name="GLUE2EntityOtherInfo">namespace=<map name="cleaner-class-to-namespace-impl">
                <lookup path="/d:dCache/d:domains/d:domain/d:cells/d:cell/d:metric[@name='class'][.='org.dcache.chimera.namespace.ChimeraCleaner']">
                  <lookup default="UNDEFINEDVALUE"
                          path="/d:dCache/d:domains/d:domain/d:cells/d:cell/d:metric[@name='class'][.='diskCacheV111.cells.CleanerV2']"/>
                </lookup>
	          </map>
            </attr>


            <!--+
                |  GLUE2DataStore
                |
                |  Represents the aggregation of storage media
                |  managed by the software.  Multiple
                |  GLUE2DataStore may be published, but here
                |  we publish a single object that represents
                |  all disks managed by dCache.
                |
                |  GLUE2StorageService
                |   |
                |   +- GLUE2StorageManager
                |   :   |
                |       +- GLUE2DataStore
                +-->
            <object rdn="GLUE2ResourceID"
                    classes="GLUE2DataStore Resource">

              <attr name="GLUE2ResourceID">glue:<constant
                        id="SE-UNIQUE-ID"/>/data/ds/dCache/disk</attr>

              <attr name="GLUE2ResourceManagerForeignKey">
                <parent-rdn rdn="GLUE2ManagerID" use="value"/>
              </attr>

              <attr name="GLUE2DataStoreLatency">online</attr>

              <attr name="GLUE2DataStoreTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup default="0"
                          path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
                </scale>
              </attr>

              <attr name="GLUE2DataStoreFreeSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>    <!-- Free + removable -->
                    <term>
                      <lookup default="0"
                              path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
                    </term>
                    <term>
                      <lookup default="0"
                              path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
                    </term>
                  </sum>
                </scale>
              </attr>

              <attr name="GLUE2DataStoreUsedSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>
                    <term>
                      <lookup default="0"
                              path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
                      </scale>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
                      </scale>
                    </term>
                  </sum>
                </scale>
              </attr>
            </object>
          </object>


          <!--+
              |  GLUE2StorageServiceCapacity (online)
              |
              |  Represents an aggregated view of all storage of the same
              |  type that is available through this GLUE2StorageService.
              |  For dCache, this mirrors the GLUE2DataStore object.
              |
              |  GLUE2StorageService
              |   |
              |   +- GLUE2StorageServiceCapacity
              |   :
              +-->
          <object rdn="GLUE2StorageServiceCapacityID"
                  classes="GLUE2StorageServiceCapacity">

            <attr name="GLUE2StorageServiceCapacityID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ssc/disk</attr>

            <attr name="GLUE2StorageServiceCapacityStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageServiceCapacityType">online</attr>

            <attr name="GLUE2StorageServiceCapacityTotalSize">
              <scale to-integer="round" factor="bytes-to-gigabytes">
                <lookup default="0"
                        path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
              </scale>
            </attr>

            <attr name="GLUE2StorageServiceCapacityFreeSize">     <!-- free + removable -->
              <scale to-integer="round" factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup default="0"
                            path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
                  </term>
                  <term>
                    <lookup default="0"
                            path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
                  </term>
                </sum>
              </scale>
            </attr>

            <attr name="GLUE2StorageServiceCapacityUsedSize">
              <scale to-integer="round" factor="bytes-to-gigabytes">
                <sum>
                  <term>
                    <lookup default="0"
                            path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
                    </scale>
                  </term>
                  <term>
                    <scale factor="negative">
                      <lookup default="0"
                              path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
                    </scale>
                  </term>
                </sum>
              </scale>
            </attr>
          </object>


          <!--+
              |  GLUE2StorageServiceCapacity (nearline)
              |
              |  If a site is publishing nearline accounting then we publish
              |  a GLUE2StorageServiceCapacity object representing an
              |  aggregate view of this nearline capacity.
              |
              |  TODO: publish GLUE2StorageManager and GLUE2DataStore
              |        objects for tape back-end system.  This involves
              |        the following:
              |          o  adding extra information to tape-info format,
              |          o  publishing GLUE2StorageManager based on this
              |             information,
              |          o  publish a GLUE2DataStore object for nearline
              |             storage,
              |          o  add links from the nearline GLUE2StorageShare
              |             objects to the nearline GLUE2DataStore object.
              |
              |  GLUE2StorageService
              |   |
              |   +- GLUE2StorageServiceCapacity
              |   :
              +-->
          <optionally>
            <when check="greater-than" test="0">
              <lookup xml-src="tape-info" path="count(/tape-info/collection)"/>
            </when>

            <object rdn="GLUE2StorageServiceCapacityID"
                    classes="GLUE2StorageServiceCapacity">

              <attr name="GLUE2StorageServiceCapacityID">glue:<constant
                      id="SE-UNIQUE-ID"/>/data/ssc/tape</attr>

              <attr name="GLUE2StorageServiceCapacityStorageServiceForeignKey">
                <parent-rdn rdn="GLUE2ServiceID" use="value"/>
              </attr>

              <attr name="GLUE2StorageServiceCapacityType">nearline</attr>

              <attr name="GLUE2StorageServiceCapacityTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum xml-src="tape-info"
                       path="/tape-info/collection/space/total"/>
                </scale>
              </attr>

              <attr name="GLUE2StorageServiceCapacityUsedSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum xml-src="tape-info"
                       path="/tape-info/collection/space/used"/>
                </scale>
              </attr>
            </object>
          </optionally>



          <!--+
              |  GLUE2AccessProtocol
              |
              |  These objects represent the StorageService's ability to
              |  handle requests of a particular type.  We publish multiple
              |  of these: one for each protocol we support.
              |
              |  GLUE2StorageService
              |   |
              |   +- GLUE2AccessProtocol
              |   :
              +-->
          <object rdn="GLUE2StorageAccessProtocolID"
                  select="/d:dCache/d:doors/d:door"
                  classes="GLUE2StorageAccessProtocol">

            <suppress test="SRM">
              <lookup path="d:protocol/d:metric[@name='family']"/>
            </suppress>

            <unique> <!-- One object per protocol-version -->
              <lookup path="d:protocol/d:metric[@name='family']"/>
              <lookup path="d:protocol/d:metric[@name='version']"/>
            </unique>

            <attr name="GLUE2StorageAccessProtocolID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ap/<lookup
                      path="d:protocol/d:metric[@name='family']"/>/<lookup
                      path="d:protocol/d:metric[@name='version']"/></attr>

            <attr name="GLUE2StorageAccessProtocolStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageAccessProtocolType">
              <map name="door-protocol-family-to-GLUE2-StorageAccessProtocol_t">
                <lookup path="d:protocol/d:metric[@name='family']"/>
              </map>
            </attr>

            <attr name="GLUE2StorageAccessProtocolVersion">
              <lookup path="d:protocol/d:metric[@name='version']"/>
            </attr>
          </object>


          <!--+
              |  GLUE2EndpointID
              |
              |  These objects represent mechanisms that allow interaction
              |  with the StorageService.  For dCache, these are the doors.
              |
              |  GLUE2StorageService
              |   |
              |   +- GLUE2EndpointID
              |   :   |
              |       +- GLUE2AccessPolicy
              +-->
          <object rdn="GLUE2EndpointID"
                  select="/d:dCache/d:doors/d:door"
                  classes="GLUE2StorageEndpoint GLUE2Endpoint">

            <attr name="GLUE2EndpointID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ep/<lookup
                    path="d:interfaces/d:interface[d:metric[@name='order']=1]/d:metric[@name='FQDN']"/>/<lookup
                    path="d:protocol/d:metric[@name='family']"/>/<lookup
                    path="d:protocol/d:metric[@name='version']"/>
            </attr>

            <!-- FIXME a bug in current BDII GLUE2 schema results in requiring
                       this class to publish GLUE2EndpointServiceForeignKey
                       and GLUE2StorageEndpointStorageServiceForeignKey -->
            <attr name="GLUE2StorageEndpointStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2EndpointServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2EndpointInterfaceName">
              <map name="door-protocol-family-to-GLUE2-InterfaceName_t">
                <lookup path="d:protocol/d:metric[@name='family']"/>
              </map>
            </attr>

            <choose>
              <optionally>
                <when test="SRM">
                  <lookup path="d:protocol/d:metric[@name='family']"/>
                </when>
                <attr name="GLUE2EndpointInterfaceVersion">2.2</attr>
                <attr name="GLUE2EndpointCapability">data.management.storage</attr>
                <attr name="GLUE2EndpointCapability">data.management.transfer</attr>
                <attr name="GLUE2EndpointURL">httpg://<constant id="SE-UNIQUE-ID"/>:<lookup
                        path="d:metric[@name='port']"/>/srm/managerv2</attr>
              </optionally>

              <otherwise>
                <attr name="GLUE2EndpointURL">
                  <map name="door-protocol-family-to-URL-Schema">
                    <lookup path="d:protocol/d:metric[@name='family']"/>
                  </map>://<lookup
                          path="d:interfaces/d:interface[d:metric[@name='order']=1]/d:metric[@name='FQDN']"/>:<lookup
                          path="d:metric[@name='port']"/>
                </attr>

                <attr name="GLUE2EndpointInterfaceVersion">
                  <lookup path="d:protocol/d:metric[@name='version']"/>
                </attr>

                <attr name="GLUE2EndpointCapability">data.transfer</attr>
              </otherwise>
            </choose>

            <attr name="GLUE2EndpointQualityLevel">
              <constant id="DCACHE-QUALITY-LEVEL"/>
            </attr>

            <attr name="GLUE2EndpointHealthState">ok</attr>
            <attr name="GLUE2EndpointServingState">production</attr>


            <!--+
                |  GLUE2AccessPolicy
                |
                |  The GLUE2AccessPolicy objects represent
                |  the ability for one or more groups to
                |  use the corresponding GLUE2StorageEndpoint.
                |  For dCache, we publish a set of VOs for each
                |  GLUE2StorageEndpoint.
                |
                |  GLUE2StorageService
                |   |
                |   +- GLUE2EndpointID
                |   :   |
                |       +- GLUE2AccessPolicy
                +-->
            <object rdn="GLUE2PolicyID"
                    classes="GLUE2AccessPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">glue:<constant
                      id="SE-UNIQUE-ID"/>/data/ep/ap/basic</attr>

              <attr name="GLUE2AccessPolicyEndpointForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <attr name="GLUE2PolicyRule"
                    list="SRM-supported-VOs">vo:<item/></attr>
            </object>
          </object>



          <!--+
              |  GLUE2StorageShare
              |
              |  A GLUE2StorageShare represents some part of the available
              |  storage capacity.  StorageShare objects can represent
              |  overlapping space and there's an attribute to identify
              |  a set of overlapping GLUE2StorageShare objects.
              |
              |  There are four groups of GLUE2StorageShare objects,
              |  representing:
              |    o  physical disk (NAS),
              |    o  nearline (collection of tapes),
              |    o  offline (only for accounting),
              |    o  space reservations.
              +-->

          <!--+
              |  GLUE2StorageShare (NAS write view)
              |
              |  GLUE2StorageShare representing physical storage.  We
              |  publish these mainly to allow storage accounting.  Since
              |  GLUE2StorageShare includes the path, we publish a
              |  GLUE2StorageShare for each store-unit that can write into
              |  this NAS, as they may have different GLUE2StorageSharePath.
              |
              |  TODO: we may publish more objects than is necessary:
              |        different store units may have the same path so it may
              |        be possible to collapse objects.
              |
              |  GLUE2StorageService
              |   |
              |   +-GLUE2StorageShare
              |   :  |
              |      +- GLUE2StorageShareCapacity
              |      |
              |      +- GLUE2MappingPolicy
              +-->
          <object rdn="GLUE2ShareID"
                  select="/d:dCache/d:nas/d:nas/d:units/d:store/d:write/d:unitref"
                  classes="GLUE2StorageShare GLUE2Share">

            <attr name="GLUE2ShareID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ss/nas/<map
                    name="GlueSALocalID-BDII-workaround">
                <lookup path="../../../../@id"/>-write-<lookup path="@name"/>
	          </map>
            </attr>

	        <attr name="GLUE2StorageShareDataStoreForeignKey">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ds/dCache/disk</attr>

            <attr name="GLUE2StorageShareStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageSharePath">
              <map name="unit-to-path">
                <lookup path="@name"/>
              </map>
            </attr>

            <attr name="GLUE2StorageShareSharingID">nas:<lookup
                    path="../../../../@id"/>
            </attr>

            <attr name="GLUE2StorageShareServingState">production</attr>

            <attr name="GLUE2StorageShareAccessLatency">online</attr>


            <!--+
                |  GLUE2StorageShareCapacity
                |
                |  Describes this share's usage of a specific type of
                |  storage media.  One can publish multiple objects,
                |  each representing a different media type, however,
                |  here we publish just one, for disk.
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2StorageShareCapacity
                +-->
            <object rdn="GLUE2StorageShareCapacityID"
                    select="../../../.."
                    classes="GLUE2StorageShareCapacity">

              <attr name="GLUE2StorageShareCapacityID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/disk</attr>

              <attr name="GLUE2StorageShareCapacityStorageShareForeignKey">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>
              </attr>

              <attr name="GLUE2StorageShareCapacityType">online</attr>

              <attr name="GLUE2StorageShareCapacityTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup default="0"
                          child="path">d:space/d:metric[@name='total']</lookup>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityFreeSize"> <!-- Free + Removable -->
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='free']</lookup>
                    </term>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='removable']</lookup>
                    </term>
                  </sum>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityUsedSize">
                <!-- Total - (Free + Removable) -->
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='total']</lookup>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='free']</lookup>
                      </scale>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='removable']</lookup>
                      </scale>
                    </term>
                  </sum>
                </scale>
              </attr>
            </object>


            <!--+
                |  GLUE2MappingPolicy
                |
                |  Describe who is allowed to use this GLUE2StorageShare
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2MappingPolicy
                +-->
	        <object rdn="GLUE2PolicyID"
                    classes="GLUE2MappingPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/mp/basic</attr>

              <attr name="GLUE2MappingPolicyShareForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <choose>
                <optionally>
                  <when test="*@*">
                    <lookup path="@name"/>
                  </when>

                  <attr name="GLUE2PolicyRule"
                          list="default-store-unit-VOs">vo:<item/></attr>
                </optionally>

                <otherwise>
                  <attr name="GLUE2PolicyRule">vo:<map name="unit-to-VO">
                      <lookup path="@name"/>
                    </map>
                  </attr>
                </otherwise>
              </choose>
            </object>
          </object>


          <!--+
              |  GLUE2StorageShare (NAS read/stage view)
              |
              |  We publish a GLUE2StorageShare object for each NAS.  Since
              |  this doesn't publish VO-specific information (like
              |  GLUE2StorageSharePath) we can publish a single
              |  GLUE2StorageShare object.
              |
              |  TODO: try to collapse these objects with those of the NAS
              |        write-view.
              |
              |  GLUE2StorageService
              |   |
              |   +-GLUE2StorageShare
              |   :  |
              |      +- GLUE2StorageShareCapacity
              |      |
              |      +- GLUE2MappingPolicy
              +-->
	      <object rdn="GLUE2ShareID"
		          select="/d:dCache/d:nas/d:nas[count(d:units/d:store/d:read/d:unitref) > 0 or count(d:units/d:store/d:stage/d:unitref) > 0]"
		          classes="GLUE2StorageShare GLUE2Share">

            <attr name="GLUE2ShareID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ss/nas/<map
                    name="GlueSALocalID-BDII-workaround">
                <lookup path="@id"/>
              </map>
            </attr>

            <attr name="GLUE2StorageShareStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageShareSharingID">nas:<lookup path="@id"/></attr>

            <attr name="GLUE2StorageShareDataStoreForeignKey">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ds/dCache/disk</attr>

            <attr name="GLUE2StorageShareServingState">production</attr>

            <attr name="GLUE2StorageShareAccessLatency">online</attr>


            <!--+
                |  GLUE2StorageShareCapacity
                |
                |  What is the capacity of this NAS?
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2StorageShareCapacity
                +-->
            <object rdn="GLUE2StorageShareCapacityID" select="."
                    classes="GLUE2StorageShareCapacity">

              <attr name="GLUE2StorageShareCapacityID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/disk</attr>

              <attr name="GLUE2StorageShareCapacityStorageShareForeignKey">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>
              </attr>

              <attr name="GLUE2StorageShareCapacityType">online</attr>

              <attr name="GLUE2StorageShareCapacityTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup default="0"
                          child="path">d:space/d:metric[@name='total']</lookup>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityFreeSize">
                <!-- Free + Removable -->
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='free']</lookup>
                    </term>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='removable']</lookup>
                    </term>
                  </sum>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityUsedSize">
                <!-- Total - (Free + Removable) -->
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='total']</lookup>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='free']</lookup>
                      </scale>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='removable']</lookup>
                      </scale>
                    </term>
                  </sum>
                </scale>
              </attr>
            </object>


            <!--+
                |  GLUE2MappingPolicy
                |
                |  Who can use this NAS when reading or staging?
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2MappingPolicy
                +-->
            <object rdn="GLUE2PolicyID"
                    classes="GLUE2MappingPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/mp/basic</attr>

              <attr name="GLUE2MappingPolicyShareForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <!-- Publish non-default (ie, not "*@*") store-unit VOs -->
              <attr name="GLUE2PolicyRule"
                    select="d:units/d:store/d:read/d:unitref | d:units/d:store/d:stage/d:unitref">
                <suppress test="*@*">
                  <lookup path="@id"/>
                </suppress>vo:<map name="unit-to-VO">
                  <lookup path="@id"/>
                </map>
              </attr>

              <!-- Add default store-unit VOs if appropriate -->
              <optionally>
                <when test="0" check="greater-than">
                  <lookup path="count(d:units/d:store/d:read/d:unitref[@id='*@*']) + count(d:units/d:store/d:stage/d:unitref[@id='*@*'])"/>
                </when>

                <attr name="GLUE2PolicyRule"
                      list="default-store-unit-VOs">vo:<item/>
                </attr>
              </optionally>
            </object>
          </object>


          <!--+
              |  GLUE2StorageShare (tape accounting)
              |
              |  We publish a GLUE2StorageShare object for 'collection'
              |  object in the tape accounting file.
              |
              |  GLUE2StorageService
              |   |
              |   +-GLUE2StorageShare
              |   :  |
              |      +- GLUE2StorageShareCapacity
              |      |
              |      +- GLUE2MappingPolicy
              +-->
          <object rdn="GLUE2ShareID"
                  xml-src="tape-info"
                  select="/tape-info/collection"
                  classes="GLUE2StorageShare GLUE2Share">

            <attr name="GLUE2ShareID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ss/tape/<lookup xml-src="tape-info" path="@id"/>
            </attr>

            <attr name="GLUE2StorageShareStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageShareAccessLatency">nearline</attr>

            <attr name="GLUE2StorageShareRetentionPolicy">custodial</attr>

            <attr name="GLUE2StorageShareServingState">production</attr>

            <attr name="GLUE2StorageShareSharingID">dedicated</attr>

            <!-- FIXME we don't publish GLUE2StorageSharePath at the moment
                       as this is VO-specific information and we need to
                       support tape storage that isn't allocated to any VO.
                       This is currently only possible by repeating the class
                       defn and selecting those /tape-info/collection objects
                       that have no 'for/vo' XML elements -->


            <!--+
                |  GLUE2StorageShareCapacity
                |
                |  The size information about this tape collection.
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2StorageShareCapacity
                +-->
            <object rdn="GLUE2StorageShareCapacityID"
                    classes="GLUE2StorageShareCapacity">

              <attr name="GLUE2StorageShareCapacityID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/tape</attr>

              <attr name="GLUE2StorageShareCapacityStorageShareForeignKey">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>
              </attr>

              <attr name="GLUE2StorageShareCapacityType">nearline</attr>

              <attr name="GLUE2StorageShareCapacityTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup xml-src="tape-info"
                          path="space/total">0</lookup>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityReservedSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup xml-src="tape-info"
                          path="space/reserved">0</lookup>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityUsedSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup xml-src="tape-info" path="space/used">0</lookup>
                </scale>
              </attr>
            </object>


            <!--+
                |  GLUE2MappingPolicy
                |
                |  Describe who is allowed to use this tape collection
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2MappingPolicy
                +-->
            <object rdn="GLUE2PolicyID"
                    classes="GLUE2MappingPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/mp/basic</attr>

              <attr name="GLUE2MappingPolicyShareForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <attr name="GLUE2PolicyRule"
                    xml-src="tape-info"
                    select="for/vo">vo:<lookup xml-src="tape-info"
                            path="."/>
              </attr>
            </object>
          </object>


          <!--+
              |  GLUE2StorageShare (offline accounting)
              |
              |  The info-provider allows a site to register that some
              |  storage is ear-marked for a VO but is currently not
              |  available within dCache; for example, a disk array
              |  that is off to be repaired or bought hardware that
              |  hasn't been commissioned yet.
              |
              |  GLUE2StorageService
              |   |
              |   +-GLUE2StorageShare
              |   :  |
              |      +- GLUE2StorageShareCapacity
              |      |
              |      +- GLUE2MappingPolicy
              +-->
          <object rdn="GLUE2ShareID"
                  list="SRM-supported-VOs"
                  classes="Glue2StorageShare GLUE2Share">

	        <!-- Suppress publishing any object if there's no map entry -->
	        <suppress test="0" check="equal">
              <map name="VO-to-offline-disk">
                <item/>
              </map>
            </suppress>

            <attr name="GLUE2ShareID">glue:<constant
                  id="SE-UNIQUE-ID"/>/data/ss/offline/<item/>
            </attr>

            <attr name="GLUE2StorageShareStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageShareCapacityStorageShareForeignKey">
              <parent-rdn rdn="GLUE2ShareID" use="value"/>
            </attr>

            <attr name="GLUE2StorageShareAccessLatency">online</attr>

            <attr name="GLUE2StorageShareRetentionPolicy">replica</attr>

            <attr name="GLUE2StorageShareServingState">production</attr>

            <attr name="GLUE2StorageShareSharingID">dedicated</attr>


            <!--+
                |  GLUE2StorageShareCapacity
                |
                |  Storage size information about offline storage.
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2StorageShareCapacity
                +-->
            <object rdn="GLUE2StorageShareCapacityID"
                    classes="GLUE2StorageShareCapacity">

              <attr name="GLUE2StorageShareCapacityID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/disk</attr>

              <attr name="GLUE2StorageShareCapacityType">installedonline</attr>

              <attr name="GLUE2StorageShareCapacityTotalSize">
                <map name="VO-to-offline-disk">
                  <item/>
                </map>
              </attr>

              <attr name="GLUE2StorageShareCapacityUsedSize">0</attr>
            </object>


            <!--+
                |  GLUE2MappingPolicy
                |
                |  Who would be able to use this space if it was available?
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2MappingPolicy
                +-->
            <object rdn="GLUE2PolicyID"
                    classes="GLUE2MappingPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/mp/basic</attr>

              <attr name="GLUE2MappingPolicyShareForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <attr name="GLUE2PolicyRule">vo:<item/>
              </attr>
            </object>
          </object>


          <!--+
              |  GLUE2StorageShare  (SRM space reservations)
              |
              |  Here we publish a GLUE2StorageShare for each SRM space
              |  reservation, grouped by VO and description.
              |
              |  GLUE2StorageService
              |   |
              |   +-GLUE2StorageShare
              |   :  |
              |      +- GLUE2StorageShareCapacity
              |      |
              |      +- GLUE2MappingPolicy
              +-->
          <object rdn="GLUE2ShareID"
                  select="/d:dCache/d:summary/d:reservations/d:by-VO/d:VO/d:by-description/d:reservation-group"
                  classes="GLUE2StorageShare GLUE2Share">

            <attr name="GLUE2ShareID">glue:<constant
                    id="SE-UNIQUE-ID"/>/data/ss/space/<lookup path="../../@name"/>/<lookup path="@description"/>
            </attr>

            <attr name="GLUE2StorageShareStorageServiceForeignKey">
              <parent-rdn rdn="GLUE2ServiceID" use="value"/>
            </attr>

            <attr name="GLUE2StorageShareSharingID">dedicated</attr>

            <attr name="GLUE2StorageShareServingState">production</attr>

            <!-- If a space summary (by description) contains at least one
                 ONLINE reservation, publish as 'online', otherwise if at
                 least one NEARLINE, publish as 'nearline', otherwise publish
                 as 'UNKNOWNVALUE' (indicating a problem) -->
            <choose>
              <optionally>
                <when check="contains" test="ONLINE">
                  <lookup path="/d:dCache/d:reservations/d:reservation[d:metric[@name='description']=current()/@description]/d:metric[@name='access-latency']"/>
                </when>

                <attr name="GLUE2StorageShareAccessLatency">online</attr>
              </optionally>

              <optionally>
                <when check="contains" test="NEARLINE">
                  <lookup path="/d:dCache/d:reservations/d:reservation[d:metric[@name='description']=current()/@description]/d:metric[@name='access-latency']"/>
                </when>

                <attr name="GLUE2StorageShareAccessLatency">nearline</attr>
              </optionally>

              <otherwise>
                <attr name="GLUE2StorageShareAccessLatency">UNKNOWNVALUE</attr>
              </otherwise>
            </choose>

            <!-- Publish an attribute for each distinct retention policy of
                 the underlying reservations -->
            <attr select="/d:dCache/d:reservations/d:reservation[d:metric[@name='description']=current()/@description]/d:metric[@name='retention-policy']"
                  name="GLUE2StorageShareRetentionPolicy">
              <unique>
                <lookup path="."/>
              </unique>
              <map name="dCache-ALRP-values-to-Glue20">
                <lookup path="."/>
              </map>
            </attr>

            <attr name="GLUE2StorageShareTag">
              <lookup path="@description"/>
            </attr>


            <!--+
                |  GLUE2StorageShareCapacity
                |
                |  How much storage capacity has this reservation?
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2StorageShareCapacity
                +-->
            <object rdn="GLUE2StorageShareCapacityID"
                    select="."
                    classes="GLUE2StorageShareCapacity">

              <attr name="GLUE2StorageShareCapacityID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>-disk</attr>

              <attr name="GLUE2StorageShareCapacityStorageShareForeignKey">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>
              </attr>

              <attr name="GLUE2StorageShareCapacityType">online</attr>

              <attr name="GLUE2StorageShareCapacityTotalSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <lookup default="0"
                          child="path">d:space/d:metric[@name='total']</lookup>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityFreeSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>   <!-- Free + Removable -->
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='free']</lookup>
                    </term>
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='removable']</lookup>
                    </term>
                  </sum>
                </scale>
              </attr>

              <attr name="GLUE2StorageShareCapacityUsedSize">
                <scale to-integer="round" factor="bytes-to-gigabytes">
                  <sum>    <!-- Total - (Free + Removable) -->
                    <term>
                      <lookup default="0"
                              child="path">d:space/d:metric[@name='total']</lookup>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='free']</lookup>
                      </scale>
                    </term>
                    <term>
                      <scale factor="negative">
                        <lookup default="0"
                                child="path">d:space/d:metric[@name='removable']</lookup>
                      </scale>
                    </term>
                  </sum>
                </scale>
              </attr>
            </object>


            <!--+
                |  GLUE2MappingPolicy
                |
                |  Who is allowed to use this reservation?
                |
                |  GLUE2StorageService
                |   |
                |   +-GLUE2StorageShare
                |   :  |
                |      +- GLUE2MappingPolicy
                +-->
            <object rdn="GLUE2PolicyID"
                    classes="GLUE2MappingPolicy GLUE2Policy">

              <attr name="GLUE2PolicyID">
                <parent-rdn rdn="GLUE2ShareID" use="value"/>/mp/basic</attr>

              <attr name="GLUE2MappingPolicyShareForeignKey">
                <parent-rdn rdn="GLUE2EndpointID" use="value"/>
              </attr>

              <attr name="GLUE2PolicyScheme">basic</attr>

              <attr name="GLUE2PolicyRule"
                    select="d:metric[@name='vo']">vo:<lookup path="."/>
              </attr>
            </object>
          </object>

        </object>
      </object>
    </object>
  </publish>



  <!--+
      |
      |  These are the attribute definitions for each class
      |
      +-->
  <classes>

    <!-- A class defn with no attributes -->
    <class name="GlueSETop"/>

    <!-- Hardcode all GlueSchemaVersion as 1.3 -->
    <class name="GlueSchemaVersion">
      <attr name="GlueSchemaVersionMajor">1</attr>
      <attr name="GlueSchemaVersionMinor">3</attr>
    </class>


    <!-- The GlueSE object: we move much of the attributes here to
         avoid cluttering the DIT hierarchy -->
    <class name="GlueSE">
      <attr name="GlueSEStatus"><constant id="DCACHE-STATUS"/></attr>
      <attr name="GlueSEUniqueID"><constant id="SE-UNIQUE-ID"/></attr>
      <attr not-empty="1" name="GlueSEName"><constant id="SE-NAME"/></attr>
      <attr name="GlueSEImplementationName">dCache</attr>

      <attr name="GlueSEArchitecture">
        <constant id="DCACHE-ARCHITECTURE"/>
      </attr>

      <attr name="GlueSEImplementationVersion" not-empty="1">
        <map name="cell-version-to-dcache-version">
          <lookup default="UNDEFINEDVALUE"
                  path="/d:dCache/d:domains/d:domain[@name='dCacheDomain']/d:cells/d:cell[@name='PoolManager']/d:version/d:metric[@name='release']"/>
        </map> (ns=<map name="cleaner-class-to-namespace-impl">
          <lookup path="/d:dCache/d:domains/d:domain/d:cells/d:cell/d:metric[@name='class'][.='org.dcache.chimera.namespace.ChimeraCleaner']">
            <lookup default="UNDEFINEDVALUE"
                    path="/d:dCache/d:domains/d:domain/d:cells/d:cell/d:metric[@name='class'][.='diskCacheV111.cells.CleanerV2']"/>
          </lookup>
        </map>)</attr>

      <!-- GlueSESizeTotal and GlueSESizeFree are marked as
           "deprecated" in Glue-1.3, but Installed Capacity document
           says we SHOULD publish them -->

      <attr name="GlueSESizeTotal">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <lookup default="0"
                  path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
        </scale>
      </attr>

      <attr name="GlueSESizeFree">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <!-- Publish Free as free + removable -->
          <sum>
            <term>
              <lookup default="0"
                      path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
            </term>
            <term>
              <lookup default="0"
                      path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
            </term>
          </sum>
        </scale>
      </attr>

      <attr name="GlueSETotalOnlineSize">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <lookup default="0"
                  path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
        </scale>
      </attr>

      <!-- Publish GlueSEUsedOnlineSize as total - (free + removable) -->
      <attr name="GlueSEUsedOnlineSize">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <sum>
            <term>
              <lookup default="0"
                      path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='total']"/>
            </term>
            <term>
              <scale factor="negative">
                <lookup default="0"
                        path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='free']"/>
              </scale>
            </term>
            <term>
              <scale factor="negative">
                <lookup default="0"
                        path="/d:dCache/d:summary/d:pools/d:space/d:metric[@name='removable']"/>
              </scale>
            </term>
          </sum>
        </scale>
      </attr>

      <!-- We must publish Nearline sizes -->
      <attr name="GlueSETotalNearlineSize">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <sum xml-src="tape-info"
               path="/tape-info/collection/space/total"/>
        </scale>
      </attr>

      <attr name="GlueSEUsedNearlineSize">
        <scale to-integer="round" factor="bytes-to-gigabytes">
          <sum xml-src="tape-info"
               path="/tape-info/collection/space/used"/>
        </scale>
      </attr>

      <attr name="GlueForeignKey">
        <other-rdn rdn="GlueSiteUniqueID">
          <constant id="SITE-UNIQUE-ID"/>
        </other-rdn>
      </attr>
    </class>



    <!--+
        |  Publish information about our doors.
        +-->
    <class name="GlueSEAccessProtocol">

      <attr name="GlueSEAccessProtocolLocalID"><lookup path="@name"/></attr>

      <attr name="GlueSEAccessProtocolType">
        <map name="door-type-to-access-proto-type">
            <lookup path="d:protocol/d:metric[@name='family']"/>
        </map>
      </attr>

      <!-- Publish the URI.  The interfaces are ordered (with the order
           metric) indicating some preference. Order 1 will always be
           have a public-accessible FQDN, if any interface does -->
      <attr name="GlueSEAccessProtocolEndpoint">
        <lookup path="d:protocol/d:metric[@name='family']"/>://<lookup
            path="d:interfaces/d:interface[d:metric[@name='order']=1]/d:metric[@name='FQDN']"/>:<lookup
            path="d:metric[@name='port']"/>
      </attr>

      <!-- Hardcode value, based on protocol family -->
      <attr name="GlueSEAccessProtocolMaxStreams">
        <map name="door-family-to-max-streams">
          <lookup path="d:protocol/d:metric[@name='family']"/>
        </map>
      </attr>

      <!-- Hardcoded values for now -->
      <attr name="GlueSEAccessProtocolCapability">file transfer</attr>

      <!-- Hardcoded value, based on protocol family -->
      <attr name="GlueSEAccessProtocolVersion">
        <map name="door-family-to-version">
          <lookup path="d:protocol/d:metric[@name='family']"/>
        </map>
      </attr>

      <attr not-empty="1" name="GlueSEAccessProtocolSupportedSecurity">
        <map name="door-family-to-GSI">
          <lookup path="d:protocol/d:metric[@name='family']"/>
        </map>
      </attr>
    </class>



    <!--+
        |   Publish information about our SRM.
        +-->
    <class name="GlueSEControlProtocol">
      <attr name="GlueSEControlProtocolLocalID">
        <lookup path="@name"/>
      </attr>

      <attr name="GlueSEControlProtocolType">
        <map name="door-family-to-ctrl-proto-type">
          <lookup path="d:protocol/d:metric[@name='family']"/>
        </map>
      </attr>

      <!-- Publish the URI.  To support DNS aliases we may need to
           publish something other than the self-discovered (public)
           FQDN of the interface.  Currently, the SE-UNIQUE-ID
           MUST be the SRM's FQDN.  We use this here to support
           aliases  -->
      <attr name="GlueSEControlProtocolEndpoint">httpg://<constant id="SE-UNIQUE-ID"/>:<lookup
          path="d:metric[@name='port']"/>/srm/managerv2</attr>

      <!-- For now we hard-code this, which is wrong -->
      <attr name="GlueSEControlProtocolVersion">2.2.0</attr>

      <!-- The following two attributes should depend in whether we are
           publishing SRM v1.1 or SRM v2.2.  We currently don't publish
           SRM v1.1 interface, so this doesn't matter -->

      <!-- We make publishing these attributes dependent on whether the
           SrmSpaceManager is running.  This monster 'select' ensures we
           emit the attribute only if the SrmSpaceManager is running.
           We use the dCache domain's routing table to avoid hard-coding
           in which domain the SrmSpaceManager is running. -->
      <attr select="/d:dCache/d:domains/d:domain[@name=/d:dCache/d:domains/d:domain[@name='dCacheDomain']/d:routing/d:named-cells/d:cell[@name='SrmSpaceManager']/d:domainref/@name]/d:cells/d:cell[@name='SrmSpaceManager']"
            name="GlueSEControlProtocolCapability">space allocation</attr>

      <!-- The same for the space manager -->
      <attr select="/d:dCache/d:domains/d:domain[@name=/d:dCache/d:domains/d:domain[@name='dCacheDomain']/d:routing/d:named-cells/d:cell[@name='SrmSpaceManager']/d:domainref/@name]/d:cells/d:cell[@name='SrmSpaceManager']"
            name="GlueSEControlProtocolCapability">space manager</attr>

      <!-- As with the previous two attributes, we emit a
           GlueSEControlProtocolCapability attribute with the value
           "file pinning" only if the PinManager is running -->
      <attr select="/d:dCache/d:domains/d:domain[@name=/d:dCache/d:domains/d:domain[@name='dCacheDomain']/d:routing/d:named-cells/d:cell[@name='PinManager']/d:domainref/@name]/d:cells/d:cell[@name='PinManager']"
            name="GlueSEControlProtocolCapability">file pinning</attr>
    </class>



    <!-- Classes to do with Glue Storage Area -->

    <class name="GlueSATop"/>

    <class name="GlueSA">
      <!-- dCache will never expire data -->
      <attr name="GlueSAExpirationMode">neverExpire</attr>

    </class>



    <!-- This class is marked DEPRECATED in Glue v1.3 -->
    <class name="GlueSAPolicy">
<!--
      <attr name="GlueSAPolicyMaxFileSize">999999</attr>
      <attr name="GlueSAPolicyMinFileSize">999999</attr>
      <attr name="GlueSAPolicyMaxData">999999</attr>
      <attr name="GlueSAPolicyMaxNumFiles">999999</attr>
      <attr name="GlueSAPolicyMaxPinDuration">999999</attr>
      <attr name="GlueSAPolicyQuota">999999</attr>
      <attr name="GlueSAPolicyFileLifeTime">volatile</attr>
-->
    </class>



    <!--  This class is marked DEPRECATED in Glue v1.3 -->
    <class name="GlueSAState">
<!--
      <attr name="GlueSAStateUsedSpace">999999</attr>
      <attr name="GlueSAStateAvailableSpace">999999</attr>
-->
    </class>


    <class name="GlueSAAccessControlBase">
      <!-- This is too object-type specific to be defined in the
           general class -->
    </class>

  </classes>



  <!--+
      |  Various scale factors
      +-->
  <scale>
    <factor mode="divide" name="bytes-to-kilobytes">1000</factor>
    <factor mode="divide" name="bytes-to-gigabytes">1000000000</factor>
    <factor mode="multiply" name="negative">-1</factor>
  </scale>


  <!--+
      |  Some fixed mappings: you shouldn't have to edit these.
      +-->
  <mapping>

    <!--+
        |   The schema type for the access protocol URI.  For example,
        |   "gsiftp" maps to "gsiftp" (identical), but "Xrootd" maps
        |   to "root" (for root://<hostname>:<port>/)
        +-->
    <map name="door-type-to-access-proto-type">
      <sub match="Xrootd" replace-with="root"/>
    </map>

    <map name="door-protocol-family-to-URL-Schema">
      <sub match="root" replace-with="xroot"/>
    </map>

    <map name="door-protocol-family-to-GLUE2-InterfaceName_t">
      <sub match="root" replace-with="xroot"/>
    </map>

    <map name="door-protocol-family-to-GLUE2-StorageAccessProtocol_t">
      <sub match="root" replace-with="xrootd"/>
    </map>


    <map name="door-family-to-ctrl-proto-type">
      <sub match="srm_v2" replace-with="SRM"/>
    </map>


    <!-- Whether a protocol family supports GSI -->
    <map name="door-family-to-GSI">
      <sub match="gsiftp"  replace-with="GSI"/>
      <sub match="gsidcap" replace-with="GSI"/>
      <default value=""/>
    </map>


    <!--+
        |  The mapping between a protocol family and the maximum
        |  number of streams to publish.
        +-->
    <map name="door-family-to-max-streams">
      <sub match="gsiftp"  replace-with="10"/>
      <default value="5"/>
    </map>


    <!--  For now, we hard-code our protocol versions -->
    <map name="door-family-to-version">
      <sub match="gsiftp"  replace-with="2.0"/>
      <sub match="gsidcap" replace-with="1.0"/>
      <sub match="dcap"    replace-with="1.0"/>
      <sub match="Xrootd"  replace-with="2.89"/>
      <sub match="root"    replace-with="2.89"/>
    </map>

    <!--+
        |  Strip off the prefix "production-" to make the published
        |  the dCache version more readable.
        +-->
    <map name="cell-version-to-dcache-version">
      <sub match="production-" replace-with=""/>
    </map>

    <!-- RFC 2253 describes how LDAP DNs should escape certain
         characters.  Unfortunately, BDII is not RFC 2253 compliant;
         including a escape-required character in the attribute value
         that is to become part of an object's DN results in BDII
         alternatively publishing and suppressing publication of that
         object.  This is described in bug:

         https://savannah.cern.ch/bugs/?57840

         Currently, this problem is only manifest for the GlueSA
         objects used to provide information on installed capacity:
         the NAS auto-generated names can include a comma if the set
         of pools is shared between two or more store units.

         Here we introduce a work-around: we map all must-escape
	 characters ( ',', '+', '"', '\', '<', '>', '=', ';') to the
	 colon character. -->
    <map name="GlueSALocalID-BDII-workaround">
      <translate from=",+&quot;\&lt;>=;" to="::::::::"/>
    </map>

    <map name="dCache-ALRP-values-to-Glue">
      <sub match="REPLICA"   replace-with="Replica"/>
      <sub match="OUTPUT"    replace-with="Output"/>
      <sub match="CUSTODIAL" replace-with="Custodial"/>
      <sub match="ONLINE"    replace-with="Online"/>
      <sub match="NEARLINE"  replace-with="Nearline"/>
    </map>

    <map name="dCache-ALRP-values-to-Glue20">
      <sub match="REPLICA"   replace-with="replica"/>
      <sub match="OUTPUT"    replace-with="output"/>
      <sub match="CUSTODIAL" replace-with="custodial"/>
      <sub match="ONLINE"    replace-with="online"/>
      <sub match="NEARLINE"  replace-with="nearline"/>
    </map>

    <map name="cleaner-class-to-namespace-impl">
      <sub match="org.dcache.chimera.namespace.ChimeraCleaner"
           replace-with="Chimera" />
      <sub match="diskCacheV111.cells.CleanerV2"
           replace-with="PNFS" />
      <default value="UNDEFINEDVALUE"/>
    </map>
  </mapping>

</xylophone>
