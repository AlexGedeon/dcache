#  -----------------------------------------------------------------------
#     Default values for pinmanager
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of pin manager service
#
pinmanager.cell.name=PinManager

#  ---- Whether to export the pinmanager cell as a well known cell
#
#  This property controls whether the pinmanager cell is published as
#  a well known cell. Well known cells are addressable through their
#  cell name, while other cells are only addressable from other domains
#  using their fully qualified cell address.
(one-of?true|false)pinmanager.cell.export=true

#  ---- Cell message processing parameters
#
#  Settings for the request processing thread pool.
#
#  The thread pool will stay at the minimum number of threads until the
#  maximum request queue length has been reached. At that point the number
#  of threads is increased up to the maximum, after which further requests
#  will be dropped. Idle threads are terminated after the idle time until
#  the number of threads drops back to the minimum.
#
#  Except for database operations, the pin manager operates in an
#  asynchronous fashion. The minimum number of threads should be chosen
#  such that the database can be saturated under load. If network latency
#  between the pin manager and the database is high, then the minimum
#  number of threads could be increased to hide this latency. The default
#  setting is likely fine for most cases.
#
#  The maximum number of threads should be below the database connection
#  limit - otherwise threads end up blocking for idle connections and may
#  potentially deadlock in case the same thread needs more than one
#  connection (e.g. for nested transactions).
pinmanager.cell.threads.min=20
pinmanager.cell.threads.max=45
pinmanager.cell.threads.max-idle-time=60
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.cell.threads.max-idle-time.unit=SECONDS
pinmanager.cell.queue.max=10000

#  Cell address of poolmanager service
pinmanager.service.poolmanager=${dcache.service.poolmanager}

#  Timeout for pool manager requests
pinmanager.service.poolmanager.timeout=3600
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.service.poolmanager.timeout.unit=SECONDS

#  Cell address of pnfsmanager service
pinmanager.service.pnfsmanager=${dcache.service.pnfsmanager}

#  Timeout for pnfsmanager requests
pinmanager.service.pnfsmanager.timeout=300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.service.pnfsmanager.timeout.unit=SECONDS

#  Timeout for pool requests
pinmanager.service.pool.timeout=90
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.service.pool.timeout.unit=SECONDS

#  ---- Pin Manager Database Host
#
(forbidden)pinManagerDbHost = Use pinmanager.db.host
pinmanager.db.host = localhost

#  ---- Pin Manager Database Name
#
(forbidden)pinManagerDbName = Use pinmanager.db.name
pinmanager.db.name = dcache

#  ---- Pin Manager Database User
#
(forbidden)pinManagerDbUser = Use pinmanager.db.user
pinmanager.db.user = srmdcache

#  ---- Pin Manager Database Host
#
(forbidden)pinManagerDbPassword = Use pinmanager.db.password
pinmanager.db.password = srmdcache

#  ---- Pin Manager Database Host
#
(forbidden)pinManagerPasswordFile = Use pinmanager.db.password.file
pinmanager.db.password.file =

#  ---- Pin Manager database JDBC URL
pinmanager.db.url=jdbc:postgresql://${pinmanager.db.host}/${pinmanager.db.name}

#  ---- Liquibase schema definition resource
pinmanager.db.schema.changelog=org/dcache/pinmanager/model/db.changelog-master.xml

#  ---- Whether to manage the database schema automatically during startup
#
# If set to 'false' then the "dcache database update" command must be used to
# check if database schema needs to be updated and apply any necessary changes.
pinmanager.db.schema.auto=${dcache.db.schema.auto}

#  ---- Pin Manager Maximum Number of Database connections
#
(forbidden)pinManagerMaxActiveJdbcConnections = Use pinmanager.db.connections.max

#  ---- The maximum number of concurrent database connections.
#
# Should be bigger than the maximum number of request processing threads. It is
# recommended to leave a buffer of at least 5 connections on top of the number
# of threads.
pinmanager.db.connections.max = 50

#  ---- The minimum number of idle database connections.
pinmanager.db.connections.idle = 1

#  ---- Maximum pin lifetime
#
# Use -1 for infinite.
(forbidden)pinManagerMaxPinDuration = Use pinmanager.limits.pin-duration
pinmanager.limits.pin-duration = -1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.limits.pin-duration.unit = SECONDS

#  ---- Execution period of unpin tasks
#
#   Pin expiration and pin unpinning are background tasks. This property
#   controls how often to execute these tasks.
#
pinmanager.expiration-period=60
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)pinmanager.expiration-period.unit=SECONDS

# Authorization file for tape protection
pinmanager.authz.staging=${dcache.authz.staging}
pinmanager.authz.staging.pep=${dcache.authz.staging.pep}

