#  -----------------------------------------------------------------------
#     Default values for xrootd
#  -----------------------------------------------------------------------
#
#   This Java properties file contains default values for xrootd
#   configuration parameters. All values can be redefined in
#   etc/dcache.conf. Do not modify any values here as your changes
#   will be lost when you next upgrade.

#  ---- Name of Xrootd door
#
xrootd/cell.name=Xrootd-${host.name}

#  ---- TCP port for Xrootd door
#
#   Specifies the TCP port on which the Xrootd door accepts connections.
#
(deprecated)xrootdPort=1094
xrootd/port=${xrootdPort}

#  ---- Worker thread limit
#
#   Maximum number of work threads used by the door. Since the worker
#   threads block on name space and pool manager operations, a
#   relatively large value is needed.
#
xrootdThreads=1000

#  ---- Queue memory limit
#
#   Memory limit in bytes for xrootd frames queued for processing by a
#   worker thread.
#
xrootdMaxTotalMemorySize=16777216

#  ---- Per connection queue memory limit
#
#   Per connection memory limit in bytes for xrootd frames queued for
#   processing by a worker thread.
#
xrootdMaxChannelMemorySize=16777216

#  ---- PoolManager timeout
#
#   Specifies the timeout in milliseconds for communication with the
#   PoolManager cell.
#
xrootdPoolManagerTimeout=5400000

#  ---- Pool timeout
#
#   Specifies the timeout in milliseconds for communication with the
#   pool cells.
#
xrootdPoolTimeout=4000

#  ---- Mover queue timeout
#
#   Specifies the timeout in milliseconds after which the WebDAV door
#   gives up on waiting for a mover to start. This places a bound on
#   the maximum mover queue time.
#
xrootdMoverTimeout=180000

#  ---- Root path of Xrootd door
#
#   Specifies the root directory exposed through the Xrootd door.
#
xrootdRootPath=/

#  ---- Global read-only
#
#   This variable controls whether any write access is permitted.
#   This is to avoid any unauthenticated writes.  The variable
#   overrides all other authorization settings.
#
xrootdIsReadOnly=true

#  ---- Allowed paths
#
#   These parameters are set to the absolute paths of directories
#   accessible through Xrootd. Multiple directories are separated by a
#   colon. Different directories may be specified for reads and
#   writes. An empty list will disallow access to all directories.
#
xrootdAllowedPaths=/
xrootdAllowedReadPaths=${xrootdAllowedPaths}
xrootdAllowedWritePaths=${xrootdAllowedPaths}

#  ---- Authorization plugin
#
#   Currently, dCache supports only one plugin besides the default. It
#   implements token based authorization controlled by a remote file
#   catalogue.
#
#   Possible values:
#
#     org.dcache.xrootd2.security.plugins.tokenauthz.NoAuthorizationFactory
#     org.dcache.xrootd2.security.plugins.tokenauthz.TokenAuthorizationFactory
xrootdAuthzPlugin=org.dcache.xrootd2.security.plugins.tokenauthz.NoAuthorizationFactory

#  ---- Key store file
#
#   Keystore file that holds the keypairs needed to do the token based
#   authorisation.  A template keystore file can be found in
#   ${dcache.home}/etc/keystore.temp.
xrootdAuthzKeystore=${dcache.home}/etc/keystore

#  ---- User identity used for authorizing operations
#
#   As xrootd requests are not authenticated, an identity has to be
#   chosen for authorizing operations. All operations are performed as
#   this identity.
#
#   The authorization controlled by this parameter is different from
#   the authorization performed by the authorization plugin: The
#   authorization plugin validates the requests themselves
#   indepedently of the file which is accessed. E.g. the token based
#   authorization verifies that the request contains a
#   cryptopgrahically signed token from a trusted source.
#
#   Once the request is authorized it is subject to further
#   authorization by other components in dCache, e.g. PnfsManager or
#   PoolManager. Those authorizations happen wrt. the identity defined
#   by xrootdUser.
#
#   The default is 'nobody', meaning that only world-permissible
#   operations are allowed. Other valid values are 'root' (no further
#   authorization) and a string on the form UID:GID[,GID...], i.e. a
#   numerical UID followed by one or more numerical GIDs. The first
#   GID is the primary one.
#
xrootdUser=nobody

#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
xrootdIoQueue=

#  ---- Obsolete properties
#
(obsolete)nostrongauthorization=nostrongauthorization is no longer supported