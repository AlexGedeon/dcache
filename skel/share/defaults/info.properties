#  -----------------------------------------------------------------------
#     Default values for info service
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

info.cell.name = ${dcache.queue.info}

#  ---- Name of the service
#
#   This is the logical name of the service. The service name is usually
#   the name other service use to reach this service.
#
info.cell.service = ${dcache.queue.info}

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
(immutable)info.cell.replicable = true

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other service can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
info.cell.consume = ${info.cell.service}
info.cell.subscribe=${info.loginbroker.update-topic}

#  The name of the various services that info will contact.
info.service.spacemanager = ${dcache.service.spacemanager}
info.service.topo = ${dcache.service.topo}
info.service.poolmanager = ${dcache.service.poolmanager}

# TCP port to bind to
info.net.port = 22112

# IP address of interface to bind to
info.net.listen = 127.0.0.1

# TCP backlog
info.net.backlog=5

info.loginbroker.update-topic=${dcache.loginbroker.update-topic}

#
#   Document which TCP ports are opened
#
(immutable)info.net.ports.tcp = ${info.net.port}

(obsolete)info.cell.export = See info.cell.consume
