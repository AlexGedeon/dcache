#!/bin/sh

usage()
{
    echo "Usage: $(basename $0) [OPTION]... COMMAND"
    echo
    echo "Valid options are:"
    echo "   -d <seconds>   delay between automatic restart"
    echo "   -p <file>      store PID of daemon in <file>"
    echo "   -r <file>      restart daemon on termination unless <file> exists"
    echo "   -u <user>      change effective UID to <user>"
    echo "   -o <file>      redirect output to <file>"
    echo "   -f             fork"
    echo
    echo "If the output is redirected with -o then this will happen as the"
    echo "user invoking daemon, not as the user specified with -u. The"
    echo "PID file specified with -p on the other hand is updated by the"
    echo "unprivileged user, so the script ensures that the file is writable"
    echo "before dropping privileges."
    echo
    echo "Almost all error messages are redirected when -o is specified,"
    echo "including failure to execute the command. The daemon does not fully"
    echo "detach from the shell unless -o is specified. Use -o /dev/null if"
    echo "the output is not relevant."
    exit 2
} 1>&2

run()
{
    "$@" &
    if [ "$pid" ]; then
        echo $! > "$pid"
    fi
}

loop()
{
    while run "$@"; wait $!; ! [ -f "$restart" ]; do
        if [ "$delay" ] ; then
            sleep "$delay"
        fi
    done
}

while getopts d:p:r:u:o:f opt "$@"; do
    case $opt in
        d) delay="$OPTARG";;
        p) pid="$OPTARG";;
        r) restart="$OPTARG";;
        u) user="$OPTARG";;
        o) output="$OPTARG";;
        f) fork=1;;
    esac
done

shift `expr $OPTIND - 1`

[ $# -lt 1 ] && usage

# Redirect if -o is given
exec </dev/null
if [ "$output" ]; then
    exec 1>> "$output" 2>&1
fi

# Switch user if -u is given
if [ "$user" ]; then
    # Make sure the user is able to write to the PID file
    if [ "$pid" ]; then
        touch "$pid"
        chown "$user" "$pid"
    fi

    # To preserve white space, we need to quote each argument
    param="${fork:+-f} ${pid:+-p \"$pid\"} ${restart:+-r \"$restart\"} ${delay:+-d \"$delay\"}"
    for i in "$@"; do
        param="$param \"$i\""
    done

    exec su "$user" -c "/bin/sh \"$0\" $param"
fi

# Run the program
if [ "$restart" ]; then
    if [ "$fork" ]; then
        loop "$@" &
    else
        loop "$@"
    fi
else
    run "$@"
    [ "$fork" ] || wait $!
fi


