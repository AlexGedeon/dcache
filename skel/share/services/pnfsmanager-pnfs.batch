#
#   The PnfsManager
#

# The following cryptic lines will do this logic:
#
#  if  cacheInfo=companion
#            ==>  cacheInfoProvider=diskCacheV111.namespace.provider.SQLCacheLocationProviderFactory
#
#  else if    cacheInfo=<other> or missing
#            ==>  cacheInfoProvider=diskCacheV111.namespace.provider.PnfsNameSpaceProviderFactory
#  -p.
#
onerror continue
set env cacheInfoProvider diskCacheV111.namespace.provider.PnfsNameSpaceProviderFactory
define context setcontext.exe endDefine
  set env cacheInfoProvider diskCacheV111.namespace.provider.SQLCacheLocationProviderFactory
  set context -c pnfsNumberOfLocationThreads 0
  set env locationThreads ${pnfsNumberOfLocationThreads}
endDefine
eval ${cacheInfo} companion ==
exec context setcontext.exe -ifok=rc
onerror shutdown
#
# If companionDatabaseHost and defaultPnfsServer are not set in dcache.conf, use localhost, for pnfs use /pnfs/fs:
#
onerror continue
set context -c companionDatabaseHost localhost
set context -c defaultPnfsServer localhost
set context -c pnfs /pnfs/fs
set context -c namespaceProvider diskCacheV111.namespace.provider.PnfsNameSpaceProviderFactory

set env -c locationThreads 0

#
# access to Deletion registration
#
set context -c  pnfsDeleteRegistration pnfs:
set context -c  pnfsDeleteRegistrationDbUser ${pnfsDbUser}
set context -c  pnfsDeleteRegistrationDbPass ${pnfsDbPassword}

onerror shutdown

check -strong DefaultAccessLatency
check -strong DefaultRetentionPolicy
check -strong pnfsInfoExtractor
check -strong pnfsNumberOfThreads
check -strong pnfsNumberOfThreadGroups
check -strong pnfsNumberOfListThreads
check -strong pnfsListChunkSize
check -strong pnfsLogSlowThreshold
check -strong pnfsFolding
check -strong pnfsInheritFileOwnership
check -strong pnfsQueueMaxSize
check -strong pnfsDbUser
check -strong pnfsDbPassword
check -strong pnfsPasswordFile
check -strong cell.name
check -strong aclEnabled
check -strong aclTable
check -strong aclConnDriver
check -strong aclConnUrl
check -strong aclConnUser

check aclConnPswd

create org.dcache.cells.UniversalSpringCell ${cell.name} \
   "classpath:diskCacheV111/namespace/pnfsmanager.xml \
        ${pnfsInfoExtractor} \
        -export \
        -enableLargeFileSimulation \
        -storeFilesize  \
        -cmRelay=broadcast \
        -pnfsDeleteRelay=SrmSpaceManager \
        -threads=${pnfsNumberOfThreads} \
        -threadGroups=${pnfsNumberOfThreadGroups} \
        -listThreads=${pnfsNumberOfListThreads} \
        -directoryListLimit=${pnfsListChunkSize} \
        -logSlowThreshold=${pnfsLogSlowThreshold} \
        -queueMaxSize=${pnfsQueueMaxSize} \
        -default=${defaultPnfsServer} \
        -pnfs=${pnfs} \
        -aclEnabled=${aclEnabled} \
        -aclTable=${aclTable} \
        -aclConnDriver=${aclConnDriver} \
        -aclConnUrl=${aclConnUrl} \
        -aclConnUser=${aclConnUser} \
        -aclConnPswd=${aclConnPswd} \
        -DefaultAccessLatency=${DefaultAccessLatency} \
        -DefaultRetentionPolicy=${DefaultRetentionPolicy} \
        -namespace-provider=${namespaceProvider} \
        -cachelocation-provider=${cacheInfoProvider} \
        -cachelocation-provider-dbURL=jdbc:postgresql://${companionDatabaseHost}/companion \
        -cachelocation-provider-jdbcDrv=org.postgresql.Driver \
        -cachelocation-provider-dbUser=${pnfsDbUser} \
        -cachelocation-provider-dbPass=${pnfsDbPassword} \
        -cachelocation-provider-pgPass=${pnfsPasswordFile}  \
        -cachelocation-threads=${locationThreads} \
        -folding=${pnfsFolding} \
        -delete-registration=${pnfsDeleteRegistration} \
        -delete-registration-jdbcDrv=org.postgresql.Driver \
        -delete-registration-dbUser=${pnfsDeleteRegistrationDbUser} \
        -delete-registration-dbPass=${pnfsDeleteRegistrationDbPass} \
        -inheritFileOwnership=${pnfsInheritFileOwnership} \
       "
