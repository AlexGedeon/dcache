# Starts the PnfsManager with a Chimera provider

onerror shutdown

check -strong hsmStorageInfoExtractor
check -strong pnfsInheritFileOwnership
check -strong DefaultRetentionPolicy
check -strong DefaultAccessLatency
check -strong pnfsFolding
check -strong pnfsNumberOfListThreads
check -strong pnfsNumberOfThreadGroups
check -strong pnfsNumberOfThreads
check -strong pnfsListChunkSize
check -strong pnfsLogSlowThreshold
check -strong pnfsQueueMaxSize
check -strong defaultPnfsServer
check -strong cell.name
check -strong aclEnabled
check -strong db.user
check -strong db.url
check -strong db.driver
check -strong chimera.db.dialect
check db.password

create org.dcache.cells.UniversalSpringCell ${cell.name} \
   "classpath:diskCacheV111/namespace/pnfsmanager-chimera.xml \
        -export \
        -extractor=${hsmStorageInfoExtractor} \
        -cmRelay=broadcast \
        -threads=${pnfsNumberOfThreads} \
        -threadGroups=${pnfsNumberOfThreadGroups} \
        -listThreads=${pnfsNumberOfListThreads} \
        -directoryListLimit=${pnfsListChunkSize} \
        -logSlowThreshold=${pnfsLogSlowThreshold} \
        -pnfsDeleteRelay=SrmSpaceManager \
        -queueMaxSize=${pnfsQueueMaxSize} \
        -default=${defaultPnfsServer} \
        -DefaultAccessLatency=${DefaultAccessLatency} \
        -DefaultRetentionPolicy=${DefaultRetentionPolicy} \
        -aclEnabled=${aclEnabled} \
        -cachelocation-threads=0 \
        -folding=${pnfsFolding} \
        -chimera.db.user=${db.user} \
        -chimera.db.password=${db.password} \
        -chimera.db.url=${db.url} \
        -chimera.db.driver=${db.driver} \
        -chimera.db.dialect=${chimera.db.dialect} \
        -chimera.db.schema.auto=${db.schema.auto} \
        -chimera.db.schema.changelog=${db.schema.changelog} \
        -namespace-provider=org.dcache.chimera.namespace.ChimeraNameSpaceProviderFactory \
        -cachelocation-provider=org.dcache.chimera.namespace.ChimeraNameSpaceProviderFactory \
        -inheritFileOwnership=${pnfsInheritFileOwnership} \
        -verifyAllLookups=${pnfsVerifyAllLookups} \
       "
